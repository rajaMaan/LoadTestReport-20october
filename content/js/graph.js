/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 245.0, "minX": 0.0, "maxY": 99404.0, "series": [{"data": [[0.0, 85513.0], [0.1, 85513.0], [0.2, 85513.0], [0.3, 85513.0], [0.4, 85513.0], [0.5, 85513.0], [0.6, 85513.0], [0.7, 85513.0], [0.8, 85513.0], [0.9, 85513.0], [1.0, 86348.0], [1.1, 86348.0], [1.2, 86348.0], [1.3, 86348.0], [1.4, 86348.0], [1.5, 86348.0], [1.6, 86348.0], [1.7, 86348.0], [1.8, 86348.0], [1.9, 86348.0], [2.0, 87056.0], [2.1, 87056.0], [2.2, 87056.0], [2.3, 87056.0], [2.4, 87056.0], [2.5, 87056.0], [2.6, 87056.0], [2.7, 87056.0], [2.8, 87056.0], [2.9, 87056.0], [3.0, 97570.0], [3.1, 97570.0], [3.2, 97570.0], [3.3, 97570.0], [3.4, 97570.0], [3.5, 97570.0], [3.6, 97570.0], [3.7, 97570.0], [3.8, 97570.0], [3.9, 97570.0], [4.0, 99041.0], [4.1, 99041.0], [4.2, 99041.0], [4.3, 99041.0], [4.4, 99041.0], [4.5, 99041.0], [4.6, 99041.0], [4.7, 99041.0], [4.8, 99041.0], [4.9, 99041.0], [5.0, 99044.0], [5.1, 99044.0], [5.2, 99044.0], [5.3, 99044.0], [5.4, 99044.0], [5.5, 99044.0], [5.6, 99044.0], [5.7, 99044.0], [5.8, 99044.0], [5.9, 99044.0], [6.0, 99047.0], [6.1, 99047.0], [6.2, 99047.0], [6.3, 99047.0], [6.4, 99047.0], [6.5, 99047.0], [6.6, 99047.0], [6.7, 99047.0], [6.8, 99047.0], [6.9, 99047.0], [7.0, 99048.0], [7.1, 99048.0], [7.2, 99048.0], [7.3, 99048.0], [7.4, 99048.0], [7.5, 99048.0], [7.6, 99048.0], [7.7, 99048.0], [7.8, 99048.0], [7.9, 99048.0], [8.0, 99048.0], [8.1, 99048.0], [8.2, 99048.0], [8.3, 99048.0], [8.4, 99048.0], [8.5, 99048.0], [8.6, 99048.0], [8.7, 99048.0], [8.8, 99048.0], [8.9, 99048.0], [9.0, 99048.0], [9.1, 99048.0], [9.2, 99048.0], [9.3, 99048.0], [9.4, 99048.0], [9.5, 99048.0], [9.6, 99048.0], [9.7, 99048.0], [9.8, 99048.0], [9.9, 99048.0], [10.0, 99049.0], [10.1, 99049.0], [10.2, 99049.0], [10.3, 99049.0], [10.4, 99049.0], [10.5, 99049.0], [10.6, 99049.0], [10.7, 99049.0], [10.8, 99049.0], [10.9, 99049.0], [11.0, 99050.0], [11.1, 99050.0], [11.2, 99050.0], [11.3, 99050.0], [11.4, 99050.0], [11.5, 99050.0], [11.6, 99050.0], [11.7, 99050.0], [11.8, 99050.0], [11.9, 99050.0], [12.0, 99051.0], [12.1, 99051.0], [12.2, 99051.0], [12.3, 99051.0], [12.4, 99051.0], [12.5, 99051.0], [12.6, 99051.0], [12.7, 99051.0], [12.8, 99051.0], [12.9, 99051.0], [13.0, 99051.0], [13.1, 99051.0], [13.2, 99051.0], [13.3, 99051.0], [13.4, 99051.0], [13.5, 99051.0], [13.6, 99051.0], [13.7, 99051.0], [13.8, 99051.0], [13.9, 99051.0], [14.0, 99052.0], [14.1, 99052.0], [14.2, 99052.0], [14.3, 99052.0], [14.4, 99052.0], [14.5, 99052.0], [14.6, 99052.0], [14.7, 99052.0], [14.8, 99052.0], [14.9, 99052.0], [15.0, 99053.0], [15.1, 99053.0], [15.2, 99053.0], [15.3, 99053.0], [15.4, 99053.0], [15.5, 99053.0], [15.6, 99053.0], [15.7, 99053.0], [15.8, 99053.0], [15.9, 99053.0], [16.0, 99054.0], [16.1, 99054.0], [16.2, 99054.0], [16.3, 99054.0], [16.4, 99054.0], [16.5, 99054.0], [16.6, 99054.0], [16.7, 99054.0], [16.8, 99054.0], [16.9, 99054.0], [17.0, 99055.0], [17.1, 99055.0], [17.2, 99055.0], [17.3, 99055.0], [17.4, 99055.0], [17.5, 99055.0], [17.6, 99055.0], [17.7, 99055.0], [17.8, 99055.0], [17.9, 99055.0], [18.0, 99055.0], [18.1, 99055.0], [18.2, 99055.0], [18.3, 99055.0], [18.4, 99055.0], [18.5, 99055.0], [18.6, 99055.0], [18.7, 99055.0], [18.8, 99055.0], [18.9, 99055.0], [19.0, 99056.0], [19.1, 99056.0], [19.2, 99056.0], [19.3, 99056.0], [19.4, 99056.0], [19.5, 99056.0], [19.6, 99056.0], [19.7, 99056.0], [19.8, 99056.0], [19.9, 99056.0], [20.0, 99057.0], [20.1, 99057.0], [20.2, 99057.0], [20.3, 99057.0], [20.4, 99057.0], [20.5, 99057.0], [20.6, 99057.0], [20.7, 99057.0], [20.8, 99057.0], [20.9, 99057.0], [21.0, 99057.0], [21.1, 99057.0], [21.2, 99057.0], [21.3, 99057.0], [21.4, 99057.0], [21.5, 99057.0], [21.6, 99057.0], [21.7, 99057.0], [21.8, 99057.0], [21.9, 99057.0], [22.0, 99057.0], [22.1, 99057.0], [22.2, 99057.0], [22.3, 99057.0], [22.4, 99057.0], [22.5, 99057.0], [22.6, 99057.0], [22.7, 99057.0], [22.8, 99057.0], [22.9, 99057.0], [23.0, 99057.0], [23.1, 99057.0], [23.2, 99057.0], [23.3, 99057.0], [23.4, 99057.0], [23.5, 99057.0], [23.6, 99057.0], [23.7, 99057.0], [23.8, 99057.0], [23.9, 99057.0], [24.0, 99060.0], [24.1, 99060.0], [24.2, 99060.0], [24.3, 99060.0], [24.4, 99060.0], [24.5, 99060.0], [24.6, 99060.0], [24.7, 99060.0], [24.8, 99060.0], [24.9, 99060.0], [25.0, 99061.0], [25.1, 99061.0], [25.2, 99061.0], [25.3, 99061.0], [25.4, 99061.0], [25.5, 99061.0], [25.6, 99061.0], [25.7, 99061.0], [25.8, 99061.0], [25.9, 99061.0], [26.0, 99061.0], [26.1, 99061.0], [26.2, 99061.0], [26.3, 99061.0], [26.4, 99061.0], [26.5, 99061.0], [26.6, 99061.0], [26.7, 99061.0], [26.8, 99061.0], [26.9, 99061.0], [27.0, 99062.0], [27.1, 99062.0], [27.2, 99062.0], [27.3, 99062.0], [27.4, 99062.0], [27.5, 99062.0], [27.6, 99062.0], [27.7, 99062.0], [27.8, 99062.0], [27.9, 99062.0], [28.0, 99069.0], [28.1, 99069.0], [28.2, 99069.0], [28.3, 99069.0], [28.4, 99069.0], [28.5, 99069.0], [28.6, 99069.0], [28.7, 99069.0], [28.8, 99069.0], [28.9, 99069.0], [29.0, 99070.0], [29.1, 99070.0], [29.2, 99070.0], [29.3, 99070.0], [29.4, 99070.0], [29.5, 99070.0], [29.6, 99070.0], [29.7, 99070.0], [29.8, 99070.0], [29.9, 99070.0], [30.0, 99071.0], [30.1, 99071.0], [30.2, 99071.0], [30.3, 99071.0], [30.4, 99071.0], [30.5, 99071.0], [30.6, 99071.0], [30.7, 99071.0], [30.8, 99071.0], [30.9, 99071.0], [31.0, 99072.0], [31.1, 99072.0], [31.2, 99072.0], [31.3, 99072.0], [31.4, 99072.0], [31.5, 99072.0], [31.6, 99072.0], [31.7, 99072.0], [31.8, 99072.0], [31.9, 99072.0], [32.0, 99077.0], [32.1, 99077.0], [32.2, 99077.0], [32.3, 99077.0], [32.4, 99077.0], [32.5, 99077.0], [32.6, 99077.0], [32.7, 99077.0], [32.8, 99077.0], [32.9, 99077.0], [33.0, 99083.0], [33.1, 99083.0], [33.2, 99083.0], [33.3, 99083.0], [33.4, 99083.0], [33.5, 99083.0], [33.6, 99083.0], [33.7, 99083.0], [33.8, 99083.0], [33.9, 99083.0], [34.0, 99087.0], [34.1, 99087.0], [34.2, 99087.0], [34.3, 99087.0], [34.4, 99087.0], [34.5, 99087.0], [34.6, 99087.0], [34.7, 99087.0], [34.8, 99087.0], [34.9, 99087.0], [35.0, 99089.0], [35.1, 99089.0], [35.2, 99089.0], [35.3, 99089.0], [35.4, 99089.0], [35.5, 99089.0], [35.6, 99089.0], [35.7, 99089.0], [35.8, 99089.0], [35.9, 99089.0], [36.0, 99091.0], [36.1, 99091.0], [36.2, 99091.0], [36.3, 99091.0], [36.4, 99091.0], [36.5, 99091.0], [36.6, 99091.0], [36.7, 99091.0], [36.8, 99091.0], [36.9, 99091.0], [37.0, 99092.0], [37.1, 99092.0], [37.2, 99092.0], [37.3, 99092.0], [37.4, 99092.0], [37.5, 99092.0], [37.6, 99092.0], [37.7, 99092.0], [37.8, 99092.0], [37.9, 99092.0], [38.0, 99094.0], [38.1, 99094.0], [38.2, 99094.0], [38.3, 99094.0], [38.4, 99094.0], [38.5, 99094.0], [38.6, 99094.0], [38.7, 99094.0], [38.8, 99094.0], [38.9, 99094.0], [39.0, 99096.0], [39.1, 99096.0], [39.2, 99096.0], [39.3, 99096.0], [39.4, 99096.0], [39.5, 99096.0], [39.6, 99096.0], [39.7, 99096.0], [39.8, 99096.0], [39.9, 99096.0], [40.0, 99098.0], [40.1, 99098.0], [40.2, 99098.0], [40.3, 99098.0], [40.4, 99098.0], [40.5, 99098.0], [40.6, 99098.0], [40.7, 99098.0], [40.8, 99098.0], [40.9, 99098.0], [41.0, 99099.0], [41.1, 99099.0], [41.2, 99099.0], [41.3, 99099.0], [41.4, 99099.0], [41.5, 99099.0], [41.6, 99099.0], [41.7, 99099.0], [41.8, 99099.0], [41.9, 99099.0], [42.0, 99099.0], [42.1, 99099.0], [42.2, 99099.0], [42.3, 99099.0], [42.4, 99099.0], [42.5, 99099.0], [42.6, 99099.0], [42.7, 99099.0], [42.8, 99099.0], [42.9, 99099.0], [43.0, 99105.0], [43.1, 99105.0], [43.2, 99105.0], [43.3, 99105.0], [43.4, 99105.0], [43.5, 99105.0], [43.6, 99105.0], [43.7, 99105.0], [43.8, 99105.0], [43.9, 99105.0], [44.0, 99108.0], [44.1, 99108.0], [44.2, 99108.0], [44.3, 99108.0], [44.4, 99108.0], [44.5, 99108.0], [44.6, 99108.0], [44.7, 99108.0], [44.8, 99108.0], [44.9, 99108.0], [45.0, 99111.0], [45.1, 99111.0], [45.2, 99111.0], [45.3, 99111.0], [45.4, 99111.0], [45.5, 99111.0], [45.6, 99111.0], [45.7, 99111.0], [45.8, 99111.0], [45.9, 99111.0], [46.0, 99115.0], [46.1, 99115.0], [46.2, 99115.0], [46.3, 99115.0], [46.4, 99115.0], [46.5, 99115.0], [46.6, 99115.0], [46.7, 99115.0], [46.8, 99115.0], [46.9, 99115.0], [47.0, 99116.0], [47.1, 99116.0], [47.2, 99116.0], [47.3, 99116.0], [47.4, 99116.0], [47.5, 99116.0], [47.6, 99116.0], [47.7, 99116.0], [47.8, 99116.0], [47.9, 99116.0], [48.0, 99117.0], [48.1, 99117.0], [48.2, 99117.0], [48.3, 99117.0], [48.4, 99117.0], [48.5, 99117.0], [48.6, 99117.0], [48.7, 99117.0], [48.8, 99117.0], [48.9, 99117.0], [49.0, 99117.0], [49.1, 99117.0], [49.2, 99117.0], [49.3, 99117.0], [49.4, 99117.0], [49.5, 99117.0], [49.6, 99117.0], [49.7, 99117.0], [49.8, 99117.0], [49.9, 99117.0], [50.0, 99118.0], [50.1, 99118.0], [50.2, 99118.0], [50.3, 99118.0], [50.4, 99118.0], [50.5, 99118.0], [50.6, 99118.0], [50.7, 99118.0], [50.8, 99118.0], [50.9, 99118.0], [51.0, 99120.0], [51.1, 99120.0], [51.2, 99120.0], [51.3, 99120.0], [51.4, 99120.0], [51.5, 99120.0], [51.6, 99120.0], [51.7, 99120.0], [51.8, 99120.0], [51.9, 99120.0], [52.0, 99121.0], [52.1, 99121.0], [52.2, 99121.0], [52.3, 99121.0], [52.4, 99121.0], [52.5, 99121.0], [52.6, 99121.0], [52.7, 99121.0], [52.8, 99121.0], [52.9, 99121.0], [53.0, 99121.0], [53.1, 99121.0], [53.2, 99121.0], [53.3, 99121.0], [53.4, 99121.0], [53.5, 99121.0], [53.6, 99121.0], [53.7, 99121.0], [53.8, 99121.0], [53.9, 99121.0], [54.0, 99121.0], [54.1, 99121.0], [54.2, 99121.0], [54.3, 99121.0], [54.4, 99121.0], [54.5, 99121.0], [54.6, 99121.0], [54.7, 99121.0], [54.8, 99121.0], [54.9, 99121.0], [55.0, 99124.0], [55.1, 99124.0], [55.2, 99124.0], [55.3, 99124.0], [55.4, 99124.0], [55.5, 99124.0], [55.6, 99124.0], [55.7, 99124.0], [55.8, 99124.0], [55.9, 99124.0], [56.0, 99125.0], [56.1, 99125.0], [56.2, 99125.0], [56.3, 99125.0], [56.4, 99125.0], [56.5, 99125.0], [56.6, 99125.0], [56.7, 99125.0], [56.8, 99125.0], [56.9, 99125.0], [57.0, 99125.0], [57.1, 99125.0], [57.2, 99125.0], [57.3, 99125.0], [57.4, 99125.0], [57.5, 99125.0], [57.6, 99125.0], [57.7, 99125.0], [57.8, 99125.0], [57.9, 99125.0], [58.0, 99129.0], [58.1, 99129.0], [58.2, 99129.0], [58.3, 99129.0], [58.4, 99129.0], [58.5, 99129.0], [58.6, 99129.0], [58.7, 99129.0], [58.8, 99129.0], [58.9, 99129.0], [59.0, 99136.0], [59.1, 99136.0], [59.2, 99136.0], [59.3, 99136.0], [59.4, 99136.0], [59.5, 99136.0], [59.6, 99136.0], [59.7, 99136.0], [59.8, 99136.0], [59.9, 99136.0], [60.0, 99136.0], [60.1, 99136.0], [60.2, 99136.0], [60.3, 99136.0], [60.4, 99136.0], [60.5, 99136.0], [60.6, 99136.0], [60.7, 99136.0], [60.8, 99136.0], [60.9, 99136.0], [61.0, 99137.0], [61.1, 99137.0], [61.2, 99137.0], [61.3, 99137.0], [61.4, 99137.0], [61.5, 99137.0], [61.6, 99137.0], [61.7, 99137.0], [61.8, 99137.0], [61.9, 99137.0], [62.0, 99137.0], [62.1, 99137.0], [62.2, 99137.0], [62.3, 99137.0], [62.4, 99137.0], [62.5, 99137.0], [62.6, 99137.0], [62.7, 99137.0], [62.8, 99137.0], [62.9, 99137.0], [63.0, 99141.0], [63.1, 99141.0], [63.2, 99141.0], [63.3, 99141.0], [63.4, 99141.0], [63.5, 99141.0], [63.6, 99141.0], [63.7, 99141.0], [63.8, 99141.0], [63.9, 99141.0], [64.0, 99141.0], [64.1, 99141.0], [64.2, 99141.0], [64.3, 99141.0], [64.4, 99141.0], [64.5, 99141.0], [64.6, 99141.0], [64.7, 99141.0], [64.8, 99141.0], [64.9, 99141.0], [65.0, 99141.0], [65.1, 99141.0], [65.2, 99141.0], [65.3, 99141.0], [65.4, 99141.0], [65.5, 99141.0], [65.6, 99141.0], [65.7, 99141.0], [65.8, 99141.0], [65.9, 99141.0], [66.0, 99143.0], [66.1, 99143.0], [66.2, 99143.0], [66.3, 99143.0], [66.4, 99143.0], [66.5, 99143.0], [66.6, 99143.0], [66.7, 99143.0], [66.8, 99143.0], [66.9, 99143.0], [67.0, 99146.0], [67.1, 99146.0], [67.2, 99146.0], [67.3, 99146.0], [67.4, 99146.0], [67.5, 99146.0], [67.6, 99146.0], [67.7, 99146.0], [67.8, 99146.0], [67.9, 99146.0], [68.0, 99146.0], [68.1, 99146.0], [68.2, 99146.0], [68.3, 99146.0], [68.4, 99146.0], [68.5, 99146.0], [68.6, 99146.0], [68.7, 99146.0], [68.8, 99146.0], [68.9, 99146.0], [69.0, 99148.0], [69.1, 99148.0], [69.2, 99148.0], [69.3, 99148.0], [69.4, 99148.0], [69.5, 99148.0], [69.6, 99148.0], [69.7, 99148.0], [69.8, 99148.0], [69.9, 99148.0], [70.0, 99150.0], [70.1, 99150.0], [70.2, 99150.0], [70.3, 99150.0], [70.4, 99150.0], [70.5, 99150.0], [70.6, 99150.0], [70.7, 99150.0], [70.8, 99150.0], [70.9, 99150.0], [71.0, 99151.0], [71.1, 99151.0], [71.2, 99151.0], [71.3, 99151.0], [71.4, 99151.0], [71.5, 99151.0], [71.6, 99151.0], [71.7, 99151.0], [71.8, 99151.0], [71.9, 99151.0], [72.0, 99155.0], [72.1, 99155.0], [72.2, 99155.0], [72.3, 99155.0], [72.4, 99155.0], [72.5, 99155.0], [72.6, 99155.0], [72.7, 99155.0], [72.8, 99155.0], [72.9, 99155.0], [73.0, 99160.0], [73.1, 99160.0], [73.2, 99160.0], [73.3, 99160.0], [73.4, 99160.0], [73.5, 99160.0], [73.6, 99160.0], [73.7, 99160.0], [73.8, 99160.0], [73.9, 99160.0], [74.0, 99167.0], [74.1, 99167.0], [74.2, 99167.0], [74.3, 99167.0], [74.4, 99167.0], [74.5, 99167.0], [74.6, 99167.0], [74.7, 99167.0], [74.8, 99167.0], [74.9, 99167.0], [75.0, 99181.0], [75.1, 99181.0], [75.2, 99181.0], [75.3, 99181.0], [75.4, 99181.0], [75.5, 99181.0], [75.6, 99181.0], [75.7, 99181.0], [75.8, 99181.0], [75.9, 99181.0], [76.0, 99186.0], [76.1, 99186.0], [76.2, 99186.0], [76.3, 99186.0], [76.4, 99186.0], [76.5, 99186.0], [76.6, 99186.0], [76.7, 99186.0], [76.8, 99186.0], [76.9, 99186.0], [77.0, 99188.0], [77.1, 99188.0], [77.2, 99188.0], [77.3, 99188.0], [77.4, 99188.0], [77.5, 99188.0], [77.6, 99188.0], [77.7, 99188.0], [77.8, 99188.0], [77.9, 99188.0], [78.0, 99191.0], [78.1, 99191.0], [78.2, 99191.0], [78.3, 99191.0], [78.4, 99191.0], [78.5, 99191.0], [78.6, 99191.0], [78.7, 99191.0], [78.8, 99191.0], [78.9, 99191.0], [79.0, 99193.0], [79.1, 99193.0], [79.2, 99193.0], [79.3, 99193.0], [79.4, 99193.0], [79.5, 99193.0], [79.6, 99193.0], [79.7, 99193.0], [79.8, 99193.0], [79.9, 99193.0], [80.0, 99193.0], [80.1, 99193.0], [80.2, 99193.0], [80.3, 99193.0], [80.4, 99193.0], [80.5, 99193.0], [80.6, 99193.0], [80.7, 99193.0], [80.8, 99193.0], [80.9, 99193.0], [81.0, 99204.0], [81.1, 99204.0], [81.2, 99204.0], [81.3, 99204.0], [81.4, 99204.0], [81.5, 99204.0], [81.6, 99204.0], [81.7, 99204.0], [81.8, 99204.0], [81.9, 99204.0], [82.0, 99206.0], [82.1, 99206.0], [82.2, 99206.0], [82.3, 99206.0], [82.4, 99206.0], [82.5, 99206.0], [82.6, 99206.0], [82.7, 99206.0], [82.8, 99206.0], [82.9, 99206.0], [83.0, 99213.0], [83.1, 99213.0], [83.2, 99213.0], [83.3, 99213.0], [83.4, 99213.0], [83.5, 99213.0], [83.6, 99213.0], [83.7, 99213.0], [83.8, 99213.0], [83.9, 99213.0], [84.0, 99222.0], [84.1, 99222.0], [84.2, 99222.0], [84.3, 99222.0], [84.4, 99222.0], [84.5, 99222.0], [84.6, 99222.0], [84.7, 99222.0], [84.8, 99222.0], [84.9, 99222.0], [85.0, 99226.0], [85.1, 99226.0], [85.2, 99226.0], [85.3, 99226.0], [85.4, 99226.0], [85.5, 99226.0], [85.6, 99226.0], [85.7, 99226.0], [85.8, 99226.0], [85.9, 99226.0], [86.0, 99228.0], [86.1, 99228.0], [86.2, 99228.0], [86.3, 99228.0], [86.4, 99228.0], [86.5, 99228.0], [86.6, 99228.0], [86.7, 99228.0], [86.8, 99228.0], [86.9, 99228.0], [87.0, 99228.0], [87.1, 99228.0], [87.2, 99228.0], [87.3, 99228.0], [87.4, 99228.0], [87.5, 99228.0], [87.6, 99228.0], [87.7, 99228.0], [87.8, 99228.0], [87.9, 99228.0], [88.0, 99241.0], [88.1, 99241.0], [88.2, 99241.0], [88.3, 99241.0], [88.4, 99241.0], [88.5, 99241.0], [88.6, 99241.0], [88.7, 99241.0], [88.8, 99241.0], [88.9, 99241.0], [89.0, 99249.0], [89.1, 99249.0], [89.2, 99249.0], [89.3, 99249.0], [89.4, 99249.0], [89.5, 99249.0], [89.6, 99249.0], [89.7, 99249.0], [89.8, 99249.0], [89.9, 99249.0], [90.0, 99259.0], [90.1, 99259.0], [90.2, 99259.0], [90.3, 99259.0], [90.4, 99259.0], [90.5, 99259.0], [90.6, 99259.0], [90.7, 99259.0], [90.8, 99259.0], [90.9, 99259.0], [91.0, 99266.0], [91.1, 99266.0], [91.2, 99266.0], [91.3, 99266.0], [91.4, 99266.0], [91.5, 99266.0], [91.6, 99266.0], [91.7, 99266.0], [91.8, 99266.0], [91.9, 99266.0], [92.0, 99270.0], [92.1, 99270.0], [92.2, 99270.0], [92.3, 99270.0], [92.4, 99270.0], [92.5, 99270.0], [92.6, 99270.0], [92.7, 99270.0], [92.8, 99270.0], [92.9, 99270.0], [93.0, 99272.0], [93.1, 99272.0], [93.2, 99272.0], [93.3, 99272.0], [93.4, 99272.0], [93.5, 99272.0], [93.6, 99272.0], [93.7, 99272.0], [93.8, 99272.0], [93.9, 99272.0], [94.0, 99285.0], [94.1, 99285.0], [94.2, 99285.0], [94.3, 99285.0], [94.4, 99285.0], [94.5, 99285.0], [94.6, 99285.0], [94.7, 99285.0], [94.8, 99285.0], [94.9, 99285.0], [95.0, 99309.0], [95.1, 99309.0], [95.2, 99309.0], [95.3, 99309.0], [95.4, 99309.0], [95.5, 99309.0], [95.6, 99309.0], [95.7, 99309.0], [95.8, 99309.0], [95.9, 99309.0], [96.0, 99310.0], [96.1, 99310.0], [96.2, 99310.0], [96.3, 99310.0], [96.4, 99310.0], [96.5, 99310.0], [96.6, 99310.0], [96.7, 99310.0], [96.8, 99310.0], [96.9, 99310.0], [97.0, 99327.0], [97.1, 99327.0], [97.2, 99327.0], [97.3, 99327.0], [97.4, 99327.0], [97.5, 99327.0], [97.6, 99327.0], [97.7, 99327.0], [97.8, 99327.0], [97.9, 99327.0], [98.0, 99360.0], [98.1, 99360.0], [98.2, 99360.0], [98.3, 99360.0], [98.4, 99360.0], [98.5, 99360.0], [98.6, 99360.0], [98.7, 99360.0], [98.8, 99360.0], [98.9, 99360.0], [99.0, 99404.0], [99.1, 99404.0], [99.2, 99404.0], [99.3, 99404.0], [99.4, 99404.0], [99.5, 99404.0], [99.6, 99404.0], [99.7, 99404.0], [99.8, 99404.0], [99.9, 99404.0]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[0.0, 245.0], [0.1, 245.0], [0.2, 245.0], [0.3, 245.0], [0.4, 245.0], [0.5, 245.0], [0.6, 245.0], [0.7, 245.0], [0.8, 245.0], [0.9, 245.0], [1.0, 276.0], [1.1, 276.0], [1.2, 276.0], [1.3, 276.0], [1.4, 276.0], [1.5, 276.0], [1.6, 276.0], [1.7, 276.0], [1.8, 276.0], [1.9, 276.0], [2.0, 283.0], [2.1, 283.0], [2.2, 283.0], [2.3, 283.0], [2.4, 283.0], [2.5, 283.0], [2.6, 283.0], [2.7, 283.0], [2.8, 283.0], [2.9, 283.0], [3.0, 284.0], [3.1, 284.0], [3.2, 284.0], [3.3, 284.0], [3.4, 284.0], [3.5, 284.0], [3.6, 284.0], [3.7, 284.0], [3.8, 284.0], [3.9, 284.0], [4.0, 285.0], [4.1, 285.0], [4.2, 285.0], [4.3, 285.0], [4.4, 285.0], [4.5, 285.0], [4.6, 285.0], [4.7, 285.0], [4.8, 285.0], [4.9, 285.0], [5.0, 289.0], [5.1, 289.0], [5.2, 289.0], [5.3, 289.0], [5.4, 289.0], [5.5, 289.0], [5.6, 289.0], [5.7, 289.0], [5.8, 289.0], [5.9, 289.0], [6.0, 291.0], [6.1, 291.0], [6.2, 291.0], [6.3, 291.0], [6.4, 291.0], [6.5, 291.0], [6.6, 291.0], [6.7, 291.0], [6.8, 291.0], [6.9, 291.0], [7.0, 298.0], [7.1, 298.0], [7.2, 298.0], [7.3, 298.0], [7.4, 298.0], [7.5, 298.0], [7.6, 298.0], [7.7, 298.0], [7.8, 298.0], [7.9, 298.0], [8.0, 299.0], [8.1, 299.0], [8.2, 299.0], [8.3, 299.0], [8.4, 299.0], [8.5, 299.0], [8.6, 299.0], [8.7, 299.0], [8.8, 299.0], [8.9, 299.0], [9.0, 299.0], [9.1, 299.0], [9.2, 299.0], [9.3, 299.0], [9.4, 299.0], [9.5, 299.0], [9.6, 299.0], [9.7, 299.0], [9.8, 299.0], [9.9, 299.0], [10.0, 300.0], [10.1, 300.0], [10.2, 300.0], [10.3, 300.0], [10.4, 300.0], [10.5, 300.0], [10.6, 300.0], [10.7, 300.0], [10.8, 300.0], [10.9, 300.0], [11.0, 301.0], [11.1, 301.0], [11.2, 301.0], [11.3, 301.0], [11.4, 301.0], [11.5, 301.0], [11.6, 301.0], [11.7, 301.0], [11.8, 301.0], [11.9, 301.0], [12.0, 302.0], [12.1, 302.0], [12.2, 302.0], [12.3, 302.0], [12.4, 302.0], [12.5, 302.0], [12.6, 302.0], [12.7, 302.0], [12.8, 302.0], [12.9, 302.0], [13.0, 304.0], [13.1, 304.0], [13.2, 304.0], [13.3, 304.0], [13.4, 304.0], [13.5, 304.0], [13.6, 304.0], [13.7, 304.0], [13.8, 304.0], [13.9, 304.0], [14.0, 305.0], [14.1, 305.0], [14.2, 305.0], [14.3, 305.0], [14.4, 305.0], [14.5, 305.0], [14.6, 305.0], [14.7, 305.0], [14.8, 305.0], [14.9, 305.0], [15.0, 306.0], [15.1, 306.0], [15.2, 306.0], [15.3, 306.0], [15.4, 306.0], [15.5, 306.0], [15.6, 306.0], [15.7, 306.0], [15.8, 306.0], [15.9, 306.0], [16.0, 306.0], [16.1, 306.0], [16.2, 306.0], [16.3, 306.0], [16.4, 306.0], [16.5, 306.0], [16.6, 306.0], [16.7, 306.0], [16.8, 306.0], [16.9, 306.0], [17.0, 308.0], [17.1, 308.0], [17.2, 308.0], [17.3, 308.0], [17.4, 308.0], [17.5, 308.0], [17.6, 308.0], [17.7, 308.0], [17.8, 308.0], [17.9, 308.0], [18.0, 311.0], [18.1, 311.0], [18.2, 311.0], [18.3, 311.0], [18.4, 311.0], [18.5, 311.0], [18.6, 311.0], [18.7, 311.0], [18.8, 311.0], [18.9, 311.0], [19.0, 318.0], [19.1, 318.0], [19.2, 318.0], [19.3, 318.0], [19.4, 318.0], [19.5, 318.0], [19.6, 318.0], [19.7, 318.0], [19.8, 318.0], [19.9, 318.0], [20.0, 318.0], [20.1, 318.0], [20.2, 318.0], [20.3, 318.0], [20.4, 318.0], [20.5, 318.0], [20.6, 318.0], [20.7, 318.0], [20.8, 318.0], [20.9, 318.0], [21.0, 320.0], [21.1, 320.0], [21.2, 320.0], [21.3, 320.0], [21.4, 320.0], [21.5, 320.0], [21.6, 320.0], [21.7, 320.0], [21.8, 320.0], [21.9, 320.0], [22.0, 320.0], [22.1, 320.0], [22.2, 320.0], [22.3, 320.0], [22.4, 320.0], [22.5, 320.0], [22.6, 320.0], [22.7, 320.0], [22.8, 320.0], [22.9, 320.0], [23.0, 320.0], [23.1, 320.0], [23.2, 320.0], [23.3, 320.0], [23.4, 320.0], [23.5, 320.0], [23.6, 320.0], [23.7, 320.0], [23.8, 320.0], [23.9, 320.0], [24.0, 321.0], [24.1, 321.0], [24.2, 321.0], [24.3, 321.0], [24.4, 321.0], [24.5, 321.0], [24.6, 321.0], [24.7, 321.0], [24.8, 321.0], [24.9, 321.0], [25.0, 322.0], [25.1, 322.0], [25.2, 322.0], [25.3, 322.0], [25.4, 322.0], [25.5, 322.0], [25.6, 322.0], [25.7, 322.0], [25.8, 322.0], [25.9, 322.0], [26.0, 323.0], [26.1, 323.0], [26.2, 323.0], [26.3, 323.0], [26.4, 323.0], [26.5, 323.0], [26.6, 323.0], [26.7, 323.0], [26.8, 323.0], [26.9, 323.0], [27.0, 325.0], [27.1, 325.0], [27.2, 325.0], [27.3, 325.0], [27.4, 325.0], [27.5, 325.0], [27.6, 325.0], [27.7, 325.0], [27.8, 325.0], [27.9, 325.0], [28.0, 325.0], [28.1, 325.0], [28.2, 325.0], [28.3, 325.0], [28.4, 325.0], [28.5, 325.0], [28.6, 325.0], [28.7, 325.0], [28.8, 325.0], [28.9, 325.0], [29.0, 329.0], [29.1, 329.0], [29.2, 329.0], [29.3, 329.0], [29.4, 329.0], [29.5, 329.0], [29.6, 329.0], [29.7, 329.0], [29.8, 329.0], [29.9, 329.0], [30.0, 332.0], [30.1, 332.0], [30.2, 332.0], [30.3, 332.0], [30.4, 332.0], [30.5, 332.0], [30.6, 332.0], [30.7, 332.0], [30.8, 332.0], [30.9, 332.0], [31.0, 332.0], [31.1, 332.0], [31.2, 332.0], [31.3, 332.0], [31.4, 332.0], [31.5, 332.0], [31.6, 332.0], [31.7, 332.0], [31.8, 332.0], [31.9, 332.0], [32.0, 333.0], [32.1, 333.0], [32.2, 333.0], [32.3, 333.0], [32.4, 333.0], [32.5, 333.0], [32.6, 333.0], [32.7, 333.0], [32.8, 333.0], [32.9, 333.0], [33.0, 334.0], [33.1, 334.0], [33.2, 334.0], [33.3, 334.0], [33.4, 334.0], [33.5, 334.0], [33.6, 334.0], [33.7, 334.0], [33.8, 334.0], [33.9, 334.0], [34.0, 335.0], [34.1, 335.0], [34.2, 335.0], [34.3, 335.0], [34.4, 335.0], [34.5, 335.0], [34.6, 335.0], [34.7, 335.0], [34.8, 335.0], [34.9, 335.0], [35.0, 338.0], [35.1, 338.0], [35.2, 338.0], [35.3, 338.0], [35.4, 338.0], [35.5, 338.0], [35.6, 338.0], [35.7, 338.0], [35.8, 338.0], [35.9, 338.0], [36.0, 343.0], [36.1, 343.0], [36.2, 343.0], [36.3, 343.0], [36.4, 343.0], [36.5, 343.0], [36.6, 343.0], [36.7, 343.0], [36.8, 343.0], [36.9, 343.0], [37.0, 349.0], [37.1, 349.0], [37.2, 349.0], [37.3, 349.0], [37.4, 349.0], [37.5, 349.0], [37.6, 349.0], [37.7, 349.0], [37.8, 349.0], [37.9, 349.0], [38.0, 350.0], [38.1, 350.0], [38.2, 350.0], [38.3, 350.0], [38.4, 350.0], [38.5, 350.0], [38.6, 350.0], [38.7, 350.0], [38.8, 350.0], [38.9, 350.0], [39.0, 352.0], [39.1, 352.0], [39.2, 352.0], [39.3, 352.0], [39.4, 352.0], [39.5, 352.0], [39.6, 352.0], [39.7, 352.0], [39.8, 352.0], [39.9, 352.0], [40.0, 353.0], [40.1, 353.0], [40.2, 353.0], [40.3, 353.0], [40.4, 353.0], [40.5, 353.0], [40.6, 353.0], [40.7, 353.0], [40.8, 353.0], [40.9, 353.0], [41.0, 354.0], [41.1, 354.0], [41.2, 354.0], [41.3, 354.0], [41.4, 354.0], [41.5, 354.0], [41.6, 354.0], [41.7, 354.0], [41.8, 354.0], [41.9, 354.0], [42.0, 355.0], [42.1, 355.0], [42.2, 355.0], [42.3, 355.0], [42.4, 355.0], [42.5, 355.0], [42.6, 355.0], [42.7, 355.0], [42.8, 355.0], [42.9, 355.0], [43.0, 357.0], [43.1, 357.0], [43.2, 357.0], [43.3, 357.0], [43.4, 357.0], [43.5, 357.0], [43.6, 357.0], [43.7, 357.0], [43.8, 357.0], [43.9, 357.0], [44.0, 360.0], [44.1, 360.0], [44.2, 360.0], [44.3, 360.0], [44.4, 360.0], [44.5, 360.0], [44.6, 360.0], [44.7, 360.0], [44.8, 360.0], [44.9, 360.0], [45.0, 361.0], [45.1, 361.0], [45.2, 361.0], [45.3, 361.0], [45.4, 361.0], [45.5, 361.0], [45.6, 361.0], [45.7, 361.0], [45.8, 361.0], [45.9, 361.0], [46.0, 365.0], [46.1, 365.0], [46.2, 365.0], [46.3, 365.0], [46.4, 365.0], [46.5, 365.0], [46.6, 365.0], [46.7, 365.0], [46.8, 365.0], [46.9, 365.0], [47.0, 371.0], [47.1, 371.0], [47.2, 371.0], [47.3, 371.0], [47.4, 371.0], [47.5, 371.0], [47.6, 371.0], [47.7, 371.0], [47.8, 371.0], [47.9, 371.0], [48.0, 373.0], [48.1, 373.0], [48.2, 373.0], [48.3, 373.0], [48.4, 373.0], [48.5, 373.0], [48.6, 373.0], [48.7, 373.0], [48.8, 373.0], [48.9, 373.0], [49.0, 374.0], [49.1, 374.0], [49.2, 374.0], [49.3, 374.0], [49.4, 374.0], [49.5, 374.0], [49.6, 374.0], [49.7, 374.0], [49.8, 374.0], [49.9, 374.0], [50.0, 376.0], [50.1, 376.0], [50.2, 376.0], [50.3, 376.0], [50.4, 376.0], [50.5, 376.0], [50.6, 376.0], [50.7, 376.0], [50.8, 376.0], [50.9, 376.0], [51.0, 378.0], [51.1, 378.0], [51.2, 378.0], [51.3, 378.0], [51.4, 378.0], [51.5, 378.0], [51.6, 378.0], [51.7, 378.0], [51.8, 378.0], [51.9, 378.0], [52.0, 382.0], [52.1, 382.0], [52.2, 382.0], [52.3, 382.0], [52.4, 382.0], [52.5, 382.0], [52.6, 382.0], [52.7, 382.0], [52.8, 382.0], [52.9, 382.0], [53.0, 385.0], [53.1, 385.0], [53.2, 385.0], [53.3, 385.0], [53.4, 385.0], [53.5, 385.0], [53.6, 385.0], [53.7, 385.0], [53.8, 385.0], [53.9, 385.0], [54.0, 386.0], [54.1, 386.0], [54.2, 386.0], [54.3, 386.0], [54.4, 386.0], [54.5, 386.0], [54.6, 386.0], [54.7, 386.0], [54.8, 386.0], [54.9, 386.0], [55.0, 387.0], [55.1, 387.0], [55.2, 387.0], [55.3, 387.0], [55.4, 387.0], [55.5, 387.0], [55.6, 387.0], [55.7, 387.0], [55.8, 387.0], [55.9, 387.0], [56.0, 393.0], [56.1, 393.0], [56.2, 393.0], [56.3, 393.0], [56.4, 393.0], [56.5, 393.0], [56.6, 393.0], [56.7, 393.0], [56.8, 393.0], [56.9, 393.0], [57.0, 395.0], [57.1, 395.0], [57.2, 395.0], [57.3, 395.0], [57.4, 395.0], [57.5, 395.0], [57.6, 395.0], [57.7, 395.0], [57.8, 395.0], [57.9, 395.0], [58.0, 395.0], [58.1, 395.0], [58.2, 395.0], [58.3, 395.0], [58.4, 395.0], [58.5, 395.0], [58.6, 395.0], [58.7, 395.0], [58.8, 395.0], [58.9, 395.0], [59.0, 400.0], [59.1, 400.0], [59.2, 400.0], [59.3, 400.0], [59.4, 400.0], [59.5, 400.0], [59.6, 400.0], [59.7, 400.0], [59.8, 400.0], [59.9, 400.0], [60.0, 411.0], [60.1, 411.0], [60.2, 411.0], [60.3, 411.0], [60.4, 411.0], [60.5, 411.0], [60.6, 411.0], [60.7, 411.0], [60.8, 411.0], [60.9, 411.0], [61.0, 412.0], [61.1, 412.0], [61.2, 412.0], [61.3, 412.0], [61.4, 412.0], [61.5, 412.0], [61.6, 412.0], [61.7, 412.0], [61.8, 412.0], [61.9, 412.0], [62.0, 414.0], [62.1, 414.0], [62.2, 414.0], [62.3, 414.0], [62.4, 414.0], [62.5, 414.0], [62.6, 414.0], [62.7, 414.0], [62.8, 414.0], [62.9, 414.0], [63.0, 415.0], [63.1, 415.0], [63.2, 415.0], [63.3, 415.0], [63.4, 415.0], [63.5, 415.0], [63.6, 415.0], [63.7, 415.0], [63.8, 415.0], [63.9, 415.0], [64.0, 424.0], [64.1, 424.0], [64.2, 424.0], [64.3, 424.0], [64.4, 424.0], [64.5, 424.0], [64.6, 424.0], [64.7, 424.0], [64.8, 424.0], [64.9, 424.0], [65.0, 425.0], [65.1, 425.0], [65.2, 425.0], [65.3, 425.0], [65.4, 425.0], [65.5, 425.0], [65.6, 425.0], [65.7, 425.0], [65.8, 425.0], [65.9, 425.0], [66.0, 432.0], [66.1, 432.0], [66.2, 432.0], [66.3, 432.0], [66.4, 432.0], [66.5, 432.0], [66.6, 432.0], [66.7, 432.0], [66.8, 432.0], [66.9, 432.0], [67.0, 432.0], [67.1, 432.0], [67.2, 432.0], [67.3, 432.0], [67.4, 432.0], [67.5, 432.0], [67.6, 432.0], [67.7, 432.0], [67.8, 432.0], [67.9, 432.0], [68.0, 436.0], [68.1, 436.0], [68.2, 436.0], [68.3, 436.0], [68.4, 436.0], [68.5, 436.0], [68.6, 436.0], [68.7, 436.0], [68.8, 436.0], [68.9, 436.0], [69.0, 444.0], [69.1, 444.0], [69.2, 444.0], [69.3, 444.0], [69.4, 444.0], [69.5, 444.0], [69.6, 444.0], [69.7, 444.0], [69.8, 444.0], [69.9, 444.0], [70.0, 448.0], [70.1, 448.0], [70.2, 448.0], [70.3, 448.0], [70.4, 448.0], [70.5, 448.0], [70.6, 448.0], [70.7, 448.0], [70.8, 448.0], [70.9, 448.0], [71.0, 449.0], [71.1, 449.0], [71.2, 449.0], [71.3, 449.0], [71.4, 449.0], [71.5, 449.0], [71.6, 449.0], [71.7, 449.0], [71.8, 449.0], [71.9, 449.0], [72.0, 453.0], [72.1, 453.0], [72.2, 453.0], [72.3, 453.0], [72.4, 453.0], [72.5, 453.0], [72.6, 453.0], [72.7, 453.0], [72.8, 453.0], [72.9, 453.0], [73.0, 453.0], [73.1, 453.0], [73.2, 453.0], [73.3, 453.0], [73.4, 453.0], [73.5, 453.0], [73.6, 453.0], [73.7, 453.0], [73.8, 453.0], [73.9, 453.0], [74.0, 465.0], [74.1, 465.0], [74.2, 465.0], [74.3, 465.0], [74.4, 465.0], [74.5, 465.0], [74.6, 465.0], [74.7, 465.0], [74.8, 465.0], [74.9, 465.0], [75.0, 489.0], [75.1, 489.0], [75.2, 489.0], [75.3, 489.0], [75.4, 489.0], [75.5, 489.0], [75.6, 489.0], [75.7, 489.0], [75.8, 489.0], [75.9, 489.0], [76.0, 496.0], [76.1, 496.0], [76.2, 496.0], [76.3, 496.0], [76.4, 496.0], [76.5, 496.0], [76.6, 496.0], [76.7, 496.0], [76.8, 496.0], [76.9, 496.0], [77.0, 521.0], [77.1, 521.0], [77.2, 521.0], [77.3, 521.0], [77.4, 521.0], [77.5, 521.0], [77.6, 521.0], [77.7, 521.0], [77.8, 521.0], [77.9, 521.0], [78.0, 539.0], [78.1, 539.0], [78.2, 539.0], [78.3, 539.0], [78.4, 539.0], [78.5, 539.0], [78.6, 539.0], [78.7, 539.0], [78.8, 539.0], [78.9, 539.0], [79.0, 542.0], [79.1, 542.0], [79.2, 542.0], [79.3, 542.0], [79.4, 542.0], [79.5, 542.0], [79.6, 542.0], [79.7, 542.0], [79.8, 542.0], [79.9, 542.0], [80.0, 545.0], [80.1, 545.0], [80.2, 545.0], [80.3, 545.0], [80.4, 545.0], [80.5, 545.0], [80.6, 545.0], [80.7, 545.0], [80.8, 545.0], [80.9, 545.0], [81.0, 592.0], [81.1, 592.0], [81.2, 592.0], [81.3, 592.0], [81.4, 592.0], [81.5, 592.0], [81.6, 592.0], [81.7, 592.0], [81.8, 592.0], [81.9, 592.0], [82.0, 605.0], [82.1, 605.0], [82.2, 605.0], [82.3, 605.0], [82.4, 605.0], [82.5, 605.0], [82.6, 605.0], [82.7, 605.0], [82.8, 605.0], [82.9, 605.0], [83.0, 615.0], [83.1, 615.0], [83.2, 615.0], [83.3, 615.0], [83.4, 615.0], [83.5, 615.0], [83.6, 615.0], [83.7, 615.0], [83.8, 615.0], [83.9, 615.0], [84.0, 617.0], [84.1, 617.0], [84.2, 617.0], [84.3, 617.0], [84.4, 617.0], [84.5, 617.0], [84.6, 617.0], [84.7, 617.0], [84.8, 617.0], [84.9, 617.0], [85.0, 670.0], [85.1, 670.0], [85.2, 670.0], [85.3, 670.0], [85.4, 670.0], [85.5, 670.0], [85.6, 670.0], [85.7, 670.0], [85.8, 670.0], [85.9, 670.0], [86.0, 672.0], [86.1, 672.0], [86.2, 672.0], [86.3, 672.0], [86.4, 672.0], [86.5, 672.0], [86.6, 672.0], [86.7, 672.0], [86.8, 672.0], [86.9, 672.0], [87.0, 677.0], [87.1, 677.0], [87.2, 677.0], [87.3, 677.0], [87.4, 677.0], [87.5, 677.0], [87.6, 677.0], [87.7, 677.0], [87.8, 677.0], [87.9, 677.0], [88.0, 705.0], [88.1, 705.0], [88.2, 705.0], [88.3, 705.0], [88.4, 705.0], [88.5, 705.0], [88.6, 705.0], [88.7, 705.0], [88.8, 705.0], [88.9, 705.0], [89.0, 705.0], [89.1, 705.0], [89.2, 705.0], [89.3, 705.0], [89.4, 705.0], [89.5, 705.0], [89.6, 705.0], [89.7, 705.0], [89.8, 705.0], [89.9, 705.0], [90.0, 731.0], [90.1, 731.0], [90.2, 731.0], [90.3, 731.0], [90.4, 731.0], [90.5, 731.0], [90.6, 731.0], [90.7, 731.0], [90.8, 731.0], [90.9, 731.0], [91.0, 763.0], [91.1, 763.0], [91.2, 763.0], [91.3, 763.0], [91.4, 763.0], [91.5, 763.0], [91.6, 763.0], [91.7, 763.0], [91.8, 763.0], [91.9, 763.0], [92.0, 772.0], [92.1, 772.0], [92.2, 772.0], [92.3, 772.0], [92.4, 772.0], [92.5, 772.0], [92.6, 772.0], [92.7, 772.0], [92.8, 772.0], [92.9, 772.0], [93.0, 789.0], [93.1, 789.0], [93.2, 789.0], [93.3, 789.0], [93.4, 789.0], [93.5, 789.0], [93.6, 789.0], [93.7, 789.0], [93.8, 789.0], [93.9, 789.0], [94.0, 1000.0], [94.1, 1000.0], [94.2, 1000.0], [94.3, 1000.0], [94.4, 1000.0], [94.5, 1000.0], [94.6, 1000.0], [94.7, 1000.0], [94.8, 1000.0], [94.9, 1000.0], [95.0, 1052.0], [95.1, 1052.0], [95.2, 1052.0], [95.3, 1052.0], [95.4, 1052.0], [95.5, 1052.0], [95.6, 1052.0], [95.7, 1052.0], [95.8, 1052.0], [95.9, 1052.0], [96.0, 1295.0], [96.1, 1295.0], [96.2, 1295.0], [96.3, 1295.0], [96.4, 1295.0], [96.5, 1295.0], [96.6, 1295.0], [96.7, 1295.0], [96.8, 1295.0], [96.9, 1295.0], [97.0, 1339.0], [97.1, 1339.0], [97.2, 1339.0], [97.3, 1339.0], [97.4, 1339.0], [97.5, 1339.0], [97.6, 1339.0], [97.7, 1339.0], [97.8, 1339.0], [97.9, 1339.0], [98.0, 1426.0], [98.1, 1426.0], [98.2, 1426.0], [98.3, 1426.0], [98.4, 1426.0], [98.5, 1426.0], [98.6, 1426.0], [98.7, 1426.0], [98.8, 1426.0], [98.9, 1426.0], [99.0, 1540.0], [99.1, 1540.0], [99.2, 1540.0], [99.3, 1540.0], [99.4, 1540.0], [99.5, 1540.0], [99.6, 1540.0], [99.7, 1540.0], [99.8, 1540.0], [99.9, 1540.0]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[0.0, 3416.0], [0.1, 3416.0], [0.2, 3416.0], [0.3, 3416.0], [0.4, 3416.0], [0.5, 3416.0], [0.6, 3416.0], [0.7, 3416.0], [0.8, 3416.0], [0.9, 3416.0], [1.0, 3510.0], [1.1, 3510.0], [1.2, 3510.0], [1.3, 3510.0], [1.4, 3510.0], [1.5, 3510.0], [1.6, 3510.0], [1.7, 3510.0], [1.8, 3510.0], [1.9, 3510.0], [2.0, 3520.0], [2.1, 3520.0], [2.2, 3520.0], [2.3, 3520.0], [2.4, 3520.0], [2.5, 3520.0], [2.6, 3520.0], [2.7, 3520.0], [2.8, 3520.0], [2.9, 3520.0], [3.0, 4070.0], [3.1, 4070.0], [3.2, 4070.0], [3.3, 4070.0], [3.4, 4070.0], [3.5, 4070.0], [3.6, 4070.0], [3.7, 4070.0], [3.8, 4070.0], [3.9, 4070.0], [4.0, 4123.0], [4.1, 4123.0], [4.2, 4123.0], [4.3, 4123.0], [4.4, 4123.0], [4.5, 4123.0], [4.6, 4123.0], [4.7, 4123.0], [4.8, 4123.0], [4.9, 4123.0], [5.0, 4150.0], [5.1, 4150.0], [5.2, 4150.0], [5.3, 4150.0], [5.4, 4150.0], [5.5, 4150.0], [5.6, 4150.0], [5.7, 4150.0], [5.8, 4150.0], [5.9, 4150.0], [6.0, 4685.0], [6.1, 4685.0], [6.2, 4685.0], [6.3, 4685.0], [6.4, 4685.0], [6.5, 4685.0], [6.6, 4685.0], [6.7, 4685.0], [6.8, 4685.0], [6.9, 4685.0], [7.0, 7100.0], [7.1, 7100.0], [7.2, 7100.0], [7.3, 7100.0], [7.4, 7100.0], [7.5, 7100.0], [7.6, 7100.0], [7.7, 7100.0], [7.8, 7100.0], [7.9, 7100.0], [8.0, 7105.0], [8.1, 7105.0], [8.2, 7105.0], [8.3, 7105.0], [8.4, 7105.0], [8.5, 7105.0], [8.6, 7105.0], [8.7, 7105.0], [8.8, 7105.0], [8.9, 7105.0], [9.0, 7966.0], [9.1, 7966.0], [9.2, 7966.0], [9.3, 7966.0], [9.4, 7966.0], [9.5, 7966.0], [9.6, 7966.0], [9.7, 7966.0], [9.8, 7966.0], [9.9, 7966.0], [10.0, 9462.0], [10.1, 9462.0], [10.2, 9462.0], [10.3, 9462.0], [10.4, 9462.0], [10.5, 9462.0], [10.6, 9462.0], [10.7, 9462.0], [10.8, 9462.0], [10.9, 9462.0], [11.0, 9795.0], [11.1, 9795.0], [11.2, 9795.0], [11.3, 9795.0], [11.4, 9795.0], [11.5, 9795.0], [11.6, 9795.0], [11.7, 9795.0], [11.8, 9795.0], [11.9, 9795.0], [12.0, 10986.0], [12.1, 10986.0], [12.2, 10986.0], [12.3, 10986.0], [12.4, 10986.0], [12.5, 10986.0], [12.6, 10986.0], [12.7, 10986.0], [12.8, 10986.0], [12.9, 10986.0], [13.0, 11114.0], [13.1, 11114.0], [13.2, 11114.0], [13.3, 11114.0], [13.4, 11114.0], [13.5, 11114.0], [13.6, 11114.0], [13.7, 11114.0], [13.8, 11114.0], [13.9, 11114.0], [14.0, 13704.0], [14.1, 13704.0], [14.2, 13704.0], [14.3, 13704.0], [14.4, 13704.0], [14.5, 13704.0], [14.6, 13704.0], [14.7, 13704.0], [14.8, 13704.0], [14.9, 13704.0], [15.0, 14865.0], [15.1, 14865.0], [15.2, 14865.0], [15.3, 14865.0], [15.4, 14865.0], [15.5, 14865.0], [15.6, 14865.0], [15.7, 14865.0], [15.8, 14865.0], [15.9, 14865.0], [16.0, 15519.0], [16.1, 15519.0], [16.2, 15519.0], [16.3, 15519.0], [16.4, 15519.0], [16.5, 15519.0], [16.6, 15519.0], [16.7, 15519.0], [16.8, 15519.0], [16.9, 15519.0], [17.0, 15632.0], [17.1, 15632.0], [17.2, 15632.0], [17.3, 15632.0], [17.4, 15632.0], [17.5, 15632.0], [17.6, 15632.0], [17.7, 15632.0], [17.8, 15632.0], [17.9, 15632.0], [18.0, 15736.0], [18.1, 15736.0], [18.2, 15736.0], [18.3, 15736.0], [18.4, 15736.0], [18.5, 15736.0], [18.6, 15736.0], [18.7, 15736.0], [18.8, 15736.0], [18.9, 15736.0], [19.0, 18192.0], [19.1, 18192.0], [19.2, 18192.0], [19.3, 18192.0], [19.4, 18192.0], [19.5, 18192.0], [19.6, 18192.0], [19.7, 18192.0], [19.8, 18192.0], [19.9, 18192.0], [20.0, 18760.0], [20.1, 18760.0], [20.2, 18760.0], [20.3, 18760.0], [20.4, 18760.0], [20.5, 18760.0], [20.6, 18760.0], [20.7, 18760.0], [20.8, 18760.0], [20.9, 18760.0], [21.0, 20709.0], [21.1, 20709.0], [21.2, 20709.0], [21.3, 20709.0], [21.4, 20709.0], [21.5, 20709.0], [21.6, 20709.0], [21.7, 20709.0], [21.8, 20709.0], [21.9, 20709.0], [22.0, 24527.0], [22.1, 24527.0], [22.2, 24527.0], [22.3, 24527.0], [22.4, 24527.0], [22.5, 24527.0], [22.6, 24527.0], [22.7, 24527.0], [22.8, 24527.0], [22.9, 24527.0], [23.0, 24764.0], [23.1, 24764.0], [23.2, 24764.0], [23.3, 24764.0], [23.4, 24764.0], [23.5, 24764.0], [23.6, 24764.0], [23.7, 24764.0], [23.8, 24764.0], [23.9, 24764.0], [24.0, 25272.0], [24.1, 25272.0], [24.2, 25272.0], [24.3, 25272.0], [24.4, 25272.0], [24.5, 25272.0], [24.6, 25272.0], [24.7, 25272.0], [24.8, 25272.0], [24.9, 25272.0], [25.0, 26998.0], [25.1, 26998.0], [25.2, 26998.0], [25.3, 26998.0], [25.4, 26998.0], [25.5, 26998.0], [25.6, 26998.0], [25.7, 26998.0], [25.8, 26998.0], [25.9, 26998.0], [26.0, 27247.0], [26.1, 27247.0], [26.2, 27247.0], [26.3, 27247.0], [26.4, 27247.0], [26.5, 27247.0], [26.6, 27247.0], [26.7, 27247.0], [26.8, 27247.0], [26.9, 27247.0], [27.0, 28169.0], [27.1, 28169.0], [27.2, 28169.0], [27.3, 28169.0], [27.4, 28169.0], [27.5, 28169.0], [27.6, 28169.0], [27.7, 28169.0], [27.8, 28169.0], [27.9, 28169.0], [28.0, 28796.0], [28.1, 28796.0], [28.2, 28796.0], [28.3, 28796.0], [28.4, 28796.0], [28.5, 28796.0], [28.6, 28796.0], [28.7, 28796.0], [28.8, 28796.0], [28.9, 28796.0], [29.0, 29750.0], [29.1, 29750.0], [29.2, 29750.0], [29.3, 29750.0], [29.4, 29750.0], [29.5, 29750.0], [29.6, 29750.0], [29.7, 29750.0], [29.8, 29750.0], [29.9, 29750.0], [30.0, 30309.0], [30.1, 30309.0], [30.2, 30309.0], [30.3, 30309.0], [30.4, 30309.0], [30.5, 30309.0], [30.6, 30309.0], [30.7, 30309.0], [30.8, 30309.0], [30.9, 30309.0], [31.0, 30314.0], [31.1, 30314.0], [31.2, 30314.0], [31.3, 30314.0], [31.4, 30314.0], [31.5, 30314.0], [31.6, 30314.0], [31.7, 30314.0], [31.8, 30314.0], [31.9, 30314.0], [32.0, 30837.0], [32.1, 30837.0], [32.2, 30837.0], [32.3, 30837.0], [32.4, 30837.0], [32.5, 30837.0], [32.6, 30837.0], [32.7, 30837.0], [32.8, 30837.0], [32.9, 30837.0], [33.0, 31142.0], [33.1, 31142.0], [33.2, 31142.0], [33.3, 31142.0], [33.4, 31142.0], [33.5, 31142.0], [33.6, 31142.0], [33.7, 31142.0], [33.8, 31142.0], [33.9, 31142.0], [34.0, 32274.0], [34.1, 32274.0], [34.2, 32274.0], [34.3, 32274.0], [34.4, 32274.0], [34.5, 32274.0], [34.6, 32274.0], [34.7, 32274.0], [34.8, 32274.0], [34.9, 32274.0], [35.0, 32629.0], [35.1, 32629.0], [35.2, 32629.0], [35.3, 32629.0], [35.4, 32629.0], [35.5, 32629.0], [35.6, 32629.0], [35.7, 32629.0], [35.8, 32629.0], [35.9, 32629.0], [36.0, 32647.0], [36.1, 32647.0], [36.2, 32647.0], [36.3, 32647.0], [36.4, 32647.0], [36.5, 32647.0], [36.6, 32647.0], [36.7, 32647.0], [36.8, 32647.0], [36.9, 32647.0], [37.0, 32774.0], [37.1, 32774.0], [37.2, 32774.0], [37.3, 32774.0], [37.4, 32774.0], [37.5, 32774.0], [37.6, 32774.0], [37.7, 32774.0], [37.8, 32774.0], [37.9, 32774.0], [38.0, 32825.0], [38.1, 32825.0], [38.2, 32825.0], [38.3, 32825.0], [38.4, 32825.0], [38.5, 32825.0], [38.6, 32825.0], [38.7, 32825.0], [38.8, 32825.0], [38.9, 32825.0], [39.0, 32844.0], [39.1, 32844.0], [39.2, 32844.0], [39.3, 32844.0], [39.4, 32844.0], [39.5, 32844.0], [39.6, 32844.0], [39.7, 32844.0], [39.8, 32844.0], [39.9, 32844.0], [40.0, 33031.0], [40.1, 33031.0], [40.2, 33031.0], [40.3, 33031.0], [40.4, 33031.0], [40.5, 33031.0], [40.6, 33031.0], [40.7, 33031.0], [40.8, 33031.0], [40.9, 33031.0], [41.0, 33272.0], [41.1, 33272.0], [41.2, 33272.0], [41.3, 33272.0], [41.4, 33272.0], [41.5, 33272.0], [41.6, 33272.0], [41.7, 33272.0], [41.8, 33272.0], [41.9, 33272.0], [42.0, 33456.0], [42.1, 33456.0], [42.2, 33456.0], [42.3, 33456.0], [42.4, 33456.0], [42.5, 33456.0], [42.6, 33456.0], [42.7, 33456.0], [42.8, 33456.0], [42.9, 33456.0], [43.0, 33587.0], [43.1, 33587.0], [43.2, 33587.0], [43.3, 33587.0], [43.4, 33587.0], [43.5, 33587.0], [43.6, 33587.0], [43.7, 33587.0], [43.8, 33587.0], [43.9, 33587.0], [44.0, 33646.0], [44.1, 33646.0], [44.2, 33646.0], [44.3, 33646.0], [44.4, 33646.0], [44.5, 33646.0], [44.6, 33646.0], [44.7, 33646.0], [44.8, 33646.0], [44.9, 33646.0], [45.0, 33792.0], [45.1, 33792.0], [45.2, 33792.0], [45.3, 33792.0], [45.4, 33792.0], [45.5, 33792.0], [45.6, 33792.0], [45.7, 33792.0], [45.8, 33792.0], [45.9, 33792.0], [46.0, 34022.0], [46.1, 34022.0], [46.2, 34022.0], [46.3, 34022.0], [46.4, 34022.0], [46.5, 34022.0], [46.6, 34022.0], [46.7, 34022.0], [46.8, 34022.0], [46.9, 34022.0], [47.0, 34038.0], [47.1, 34038.0], [47.2, 34038.0], [47.3, 34038.0], [47.4, 34038.0], [47.5, 34038.0], [47.6, 34038.0], [47.7, 34038.0], [47.8, 34038.0], [47.9, 34038.0], [48.0, 34055.0], [48.1, 34055.0], [48.2, 34055.0], [48.3, 34055.0], [48.4, 34055.0], [48.5, 34055.0], [48.6, 34055.0], [48.7, 34055.0], [48.8, 34055.0], [48.9, 34055.0], [49.0, 34078.0], [49.1, 34078.0], [49.2, 34078.0], [49.3, 34078.0], [49.4, 34078.0], [49.5, 34078.0], [49.6, 34078.0], [49.7, 34078.0], [49.8, 34078.0], [49.9, 34078.0], [50.0, 34164.0], [50.1, 34164.0], [50.2, 34164.0], [50.3, 34164.0], [50.4, 34164.0], [50.5, 34164.0], [50.6, 34164.0], [50.7, 34164.0], [50.8, 34164.0], [50.9, 34164.0], [51.0, 34530.0], [51.1, 34530.0], [51.2, 34530.0], [51.3, 34530.0], [51.4, 34530.0], [51.5, 34530.0], [51.6, 34530.0], [51.7, 34530.0], [51.8, 34530.0], [51.9, 34530.0], [52.0, 34534.0], [52.1, 34534.0], [52.2, 34534.0], [52.3, 34534.0], [52.4, 34534.0], [52.5, 34534.0], [52.6, 34534.0], [52.7, 34534.0], [52.8, 34534.0], [52.9, 34534.0], [53.0, 34804.0], [53.1, 34804.0], [53.2, 34804.0], [53.3, 34804.0], [53.4, 34804.0], [53.5, 34804.0], [53.6, 34804.0], [53.7, 34804.0], [53.8, 34804.0], [53.9, 34804.0], [54.0, 34876.0], [54.1, 34876.0], [54.2, 34876.0], [54.3, 34876.0], [54.4, 34876.0], [54.5, 34876.0], [54.6, 34876.0], [54.7, 34876.0], [54.8, 34876.0], [54.9, 34876.0], [55.0, 35188.0], [55.1, 35188.0], [55.2, 35188.0], [55.3, 35188.0], [55.4, 35188.0], [55.5, 35188.0], [55.6, 35188.0], [55.7, 35188.0], [55.8, 35188.0], [55.9, 35188.0], [56.0, 35313.0], [56.1, 35313.0], [56.2, 35313.0], [56.3, 35313.0], [56.4, 35313.0], [56.5, 35313.0], [56.6, 35313.0], [56.7, 35313.0], [56.8, 35313.0], [56.9, 35313.0], [57.0, 35492.0], [57.1, 35492.0], [57.2, 35492.0], [57.3, 35492.0], [57.4, 35492.0], [57.5, 35492.0], [57.6, 35492.0], [57.7, 35492.0], [57.8, 35492.0], [57.9, 35492.0], [58.0, 37886.0], [58.1, 37886.0], [58.2, 37886.0], [58.3, 37886.0], [58.4, 37886.0], [58.5, 37886.0], [58.6, 37886.0], [58.7, 37886.0], [58.8, 37886.0], [58.9, 37886.0], [59.0, 38665.0], [59.1, 38665.0], [59.2, 38665.0], [59.3, 38665.0], [59.4, 38665.0], [59.5, 38665.0], [59.6, 38665.0], [59.7, 38665.0], [59.8, 38665.0], [59.9, 38665.0], [60.0, 40709.0], [60.1, 40709.0], [60.2, 40709.0], [60.3, 40709.0], [60.4, 40709.0], [60.5, 40709.0], [60.6, 40709.0], [60.7, 40709.0], [60.8, 40709.0], [60.9, 40709.0], [61.0, 41817.0], [61.1, 41817.0], [61.2, 41817.0], [61.3, 41817.0], [61.4, 41817.0], [61.5, 41817.0], [61.6, 41817.0], [61.7, 41817.0], [61.8, 41817.0], [61.9, 41817.0], [62.0, 42464.0], [62.1, 42464.0], [62.2, 42464.0], [62.3, 42464.0], [62.4, 42464.0], [62.5, 42464.0], [62.6, 42464.0], [62.7, 42464.0], [62.8, 42464.0], [62.9, 42464.0], [63.0, 43805.0], [63.1, 43805.0], [63.2, 43805.0], [63.3, 43805.0], [63.4, 43805.0], [63.5, 43805.0], [63.6, 43805.0], [63.7, 43805.0], [63.8, 43805.0], [63.9, 43805.0], [64.0, 45344.0], [64.1, 45344.0], [64.2, 45344.0], [64.3, 45344.0], [64.4, 45344.0], [64.5, 45344.0], [64.6, 45344.0], [64.7, 45344.0], [64.8, 45344.0], [64.9, 45344.0], [65.0, 45408.0], [65.1, 45408.0], [65.2, 45408.0], [65.3, 45408.0], [65.4, 45408.0], [65.5, 45408.0], [65.6, 45408.0], [65.7, 45408.0], [65.8, 45408.0], [65.9, 45408.0], [66.0, 47005.0], [66.1, 47005.0], [66.2, 47005.0], [66.3, 47005.0], [66.4, 47005.0], [66.5, 47005.0], [66.6, 47005.0], [66.7, 47005.0], [66.8, 47005.0], [66.9, 47005.0], [67.0, 47357.0], [67.1, 47357.0], [67.2, 47357.0], [67.3, 47357.0], [67.4, 47357.0], [67.5, 47357.0], [67.6, 47357.0], [67.7, 47357.0], [67.8, 47357.0], [67.9, 47357.0], [68.0, 48002.0], [68.1, 48002.0], [68.2, 48002.0], [68.3, 48002.0], [68.4, 48002.0], [68.5, 48002.0], [68.6, 48002.0], [68.7, 48002.0], [68.8, 48002.0], [68.9, 48002.0], [69.0, 49270.0], [69.1, 49270.0], [69.2, 49270.0], [69.3, 49270.0], [69.4, 49270.0], [69.5, 49270.0], [69.6, 49270.0], [69.7, 49270.0], [69.8, 49270.0], [69.9, 49270.0], [70.0, 49284.0], [70.1, 49284.0], [70.2, 49284.0], [70.3, 49284.0], [70.4, 49284.0], [70.5, 49284.0], [70.6, 49284.0], [70.7, 49284.0], [70.8, 49284.0], [70.9, 49284.0], [71.0, 49605.0], [71.1, 49605.0], [71.2, 49605.0], [71.3, 49605.0], [71.4, 49605.0], [71.5, 49605.0], [71.6, 49605.0], [71.7, 49605.0], [71.8, 49605.0], [71.9, 49605.0], [72.0, 51414.0], [72.1, 51414.0], [72.2, 51414.0], [72.3, 51414.0], [72.4, 51414.0], [72.5, 51414.0], [72.6, 51414.0], [72.7, 51414.0], [72.8, 51414.0], [72.9, 51414.0], [73.0, 52007.0], [73.1, 52007.0], [73.2, 52007.0], [73.3, 52007.0], [73.4, 52007.0], [73.5, 52007.0], [73.6, 52007.0], [73.7, 52007.0], [73.8, 52007.0], [73.9, 52007.0], [74.0, 52568.0], [74.1, 52568.0], [74.2, 52568.0], [74.3, 52568.0], [74.4, 52568.0], [74.5, 52568.0], [74.6, 52568.0], [74.7, 52568.0], [74.8, 52568.0], [74.9, 52568.0], [75.0, 53833.0], [75.1, 53833.0], [75.2, 53833.0], [75.3, 53833.0], [75.4, 53833.0], [75.5, 53833.0], [75.6, 53833.0], [75.7, 53833.0], [75.8, 53833.0], [75.9, 53833.0], [76.0, 54619.0], [76.1, 54619.0], [76.2, 54619.0], [76.3, 54619.0], [76.4, 54619.0], [76.5, 54619.0], [76.6, 54619.0], [76.7, 54619.0], [76.8, 54619.0], [76.9, 54619.0], [77.0, 54738.0], [77.1, 54738.0], [77.2, 54738.0], [77.3, 54738.0], [77.4, 54738.0], [77.5, 54738.0], [77.6, 54738.0], [77.7, 54738.0], [77.8, 54738.0], [77.9, 54738.0], [78.0, 55305.0], [78.1, 55305.0], [78.2, 55305.0], [78.3, 55305.0], [78.4, 55305.0], [78.5, 55305.0], [78.6, 55305.0], [78.7, 55305.0], [78.8, 55305.0], [78.9, 55305.0], [79.0, 55678.0], [79.1, 55678.0], [79.2, 55678.0], [79.3, 55678.0], [79.4, 55678.0], [79.5, 55678.0], [79.6, 55678.0], [79.7, 55678.0], [79.8, 55678.0], [79.9, 55678.0], [80.0, 55691.0], [80.1, 55691.0], [80.2, 55691.0], [80.3, 55691.0], [80.4, 55691.0], [80.5, 55691.0], [80.6, 55691.0], [80.7, 55691.0], [80.8, 55691.0], [80.9, 55691.0], [81.0, 55803.0], [81.1, 55803.0], [81.2, 55803.0], [81.3, 55803.0], [81.4, 55803.0], [81.5, 55803.0], [81.6, 55803.0], [81.7, 55803.0], [81.8, 55803.0], [81.9, 55803.0], [82.0, 55868.0], [82.1, 55868.0], [82.2, 55868.0], [82.3, 55868.0], [82.4, 55868.0], [82.5, 55868.0], [82.6, 55868.0], [82.7, 55868.0], [82.8, 55868.0], [82.9, 55868.0], [83.0, 56145.0], [83.1, 56145.0], [83.2, 56145.0], [83.3, 56145.0], [83.4, 56145.0], [83.5, 56145.0], [83.6, 56145.0], [83.7, 56145.0], [83.8, 56145.0], [83.9, 56145.0], [84.0, 56188.0], [84.1, 56188.0], [84.2, 56188.0], [84.3, 56188.0], [84.4, 56188.0], [84.5, 56188.0], [84.6, 56188.0], [84.7, 56188.0], [84.8, 56188.0], [84.9, 56188.0], [85.0, 56265.0], [85.1, 56265.0], [85.2, 56265.0], [85.3, 56265.0], [85.4, 56265.0], [85.5, 56265.0], [85.6, 56265.0], [85.7, 56265.0], [85.8, 56265.0], [85.9, 56265.0], [86.0, 56744.0], [86.1, 56744.0], [86.2, 56744.0], [86.3, 56744.0], [86.4, 56744.0], [86.5, 56744.0], [86.6, 56744.0], [86.7, 56744.0], [86.8, 56744.0], [86.9, 56744.0], [87.0, 57138.0], [87.1, 57138.0], [87.2, 57138.0], [87.3, 57138.0], [87.4, 57138.0], [87.5, 57138.0], [87.6, 57138.0], [87.7, 57138.0], [87.8, 57138.0], [87.9, 57138.0], [88.0, 57256.0], [88.1, 57256.0], [88.2, 57256.0], [88.3, 57256.0], [88.4, 57256.0], [88.5, 57256.0], [88.6, 57256.0], [88.7, 57256.0], [88.8, 57256.0], [88.9, 57256.0], [89.0, 57275.0], [89.1, 57275.0], [89.2, 57275.0], [89.3, 57275.0], [89.4, 57275.0], [89.5, 57275.0], [89.6, 57275.0], [89.7, 57275.0], [89.8, 57275.0], [89.9, 57275.0], [90.0, 57381.0], [90.1, 57381.0], [90.2, 57381.0], [90.3, 57381.0], [90.4, 57381.0], [90.5, 57381.0], [90.6, 57381.0], [90.7, 57381.0], [90.8, 57381.0], [90.9, 57381.0], [91.0, 57985.0], [91.1, 57985.0], [91.2, 57985.0], [91.3, 57985.0], [91.4, 57985.0], [91.5, 57985.0], [91.6, 57985.0], [91.7, 57985.0], [91.8, 57985.0], [91.9, 57985.0], [92.0, 58313.0], [92.1, 58313.0], [92.2, 58313.0], [92.3, 58313.0], [92.4, 58313.0], [92.5, 58313.0], [92.6, 58313.0], [92.7, 58313.0], [92.8, 58313.0], [92.9, 58313.0], [93.0, 58466.0], [93.1, 58466.0], [93.2, 58466.0], [93.3, 58466.0], [93.4, 58466.0], [93.5, 58466.0], [93.6, 58466.0], [93.7, 58466.0], [93.8, 58466.0], [93.9, 58466.0], [94.0, 58524.0], [94.1, 58524.0], [94.2, 58524.0], [94.3, 58524.0], [94.4, 58524.0], [94.5, 58524.0], [94.6, 58524.0], [94.7, 58524.0], [94.8, 58524.0], [94.9, 58524.0], [95.0, 59035.0], [95.1, 59035.0], [95.2, 59035.0], [95.3, 59035.0], [95.4, 59035.0], [95.5, 59035.0], [95.6, 59035.0], [95.7, 59035.0], [95.8, 59035.0], [95.9, 59035.0], [96.0, 59357.0], [96.1, 59357.0], [96.2, 59357.0], [96.3, 59357.0], [96.4, 59357.0], [96.5, 59357.0], [96.6, 59357.0], [96.7, 59357.0], [96.8, 59357.0], [96.9, 59357.0], [97.0, 59753.0], [97.1, 59753.0], [97.2, 59753.0], [97.3, 59753.0], [97.4, 59753.0], [97.5, 59753.0], [97.6, 59753.0], [97.7, 59753.0], [97.8, 59753.0], [97.9, 59753.0], [98.0, 60318.0], [98.1, 60318.0], [98.2, 60318.0], [98.3, 60318.0], [98.4, 60318.0], [98.5, 60318.0], [98.6, 60318.0], [98.7, 60318.0], [98.8, 60318.0], [98.9, 60318.0], [99.0, 61851.0], [99.1, 61851.0], [99.2, 61851.0], [99.3, 61851.0], [99.4, 61851.0], [99.5, 61851.0], [99.6, 61851.0], [99.7, 61851.0], [99.8, 61851.0], [99.9, 61851.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[0.0, 467.0], [0.1, 467.0], [0.2, 467.0], [0.3, 467.0], [0.4, 467.0], [0.5, 467.0], [0.6, 467.0], [0.7, 467.0], [0.8, 467.0], [0.9, 467.0], [1.0, 599.0], [1.1, 599.0], [1.2, 599.0], [1.3, 599.0], [1.4, 599.0], [1.5, 599.0], [1.6, 599.0], [1.7, 599.0], [1.8, 599.0], [1.9, 599.0], [2.0, 720.0], [2.1, 720.0], [2.2, 720.0], [2.3, 720.0], [2.4, 720.0], [2.5, 720.0], [2.6, 720.0], [2.7, 720.0], [2.8, 720.0], [2.9, 720.0], [3.0, 972.0], [3.1, 972.0], [3.2, 972.0], [3.3, 972.0], [3.4, 972.0], [3.5, 972.0], [3.6, 972.0], [3.7, 972.0], [3.8, 972.0], [3.9, 972.0], [4.0, 1332.0], [4.1, 1332.0], [4.2, 1332.0], [4.3, 1332.0], [4.4, 1332.0], [4.5, 1332.0], [4.6, 1332.0], [4.7, 1332.0], [4.8, 1332.0], [4.9, 1332.0], [5.0, 1347.0], [5.1, 1347.0], [5.2, 1347.0], [5.3, 1347.0], [5.4, 1347.0], [5.5, 1347.0], [5.6, 1347.0], [5.7, 1347.0], [5.8, 1347.0], [5.9, 1347.0], [6.0, 1618.0], [6.1, 1618.0], [6.2, 1618.0], [6.3, 1618.0], [6.4, 1618.0], [6.5, 1618.0], [6.6, 1618.0], [6.7, 1618.0], [6.8, 1618.0], [6.9, 1618.0], [7.0, 3047.0], [7.1, 3047.0], [7.2, 3047.0], [7.3, 3047.0], [7.4, 3047.0], [7.5, 3047.0], [7.6, 3047.0], [7.7, 3047.0], [7.8, 3047.0], [7.9, 3047.0], [8.0, 3120.0], [8.1, 3120.0], [8.2, 3120.0], [8.3, 3120.0], [8.4, 3120.0], [8.5, 3120.0], [8.6, 3120.0], [8.7, 3120.0], [8.8, 3120.0], [8.9, 3120.0], [9.0, 3519.0], [9.1, 3519.0], [9.2, 3519.0], [9.3, 3519.0], [9.4, 3519.0], [9.5, 3519.0], [9.6, 3519.0], [9.7, 3519.0], [9.8, 3519.0], [9.9, 3519.0], [10.0, 3825.0], [10.1, 3825.0], [10.2, 3825.0], [10.3, 3825.0], [10.4, 3825.0], [10.5, 3825.0], [10.6, 3825.0], [10.7, 3825.0], [10.8, 3825.0], [10.9, 3825.0], [11.0, 4252.0], [11.1, 4252.0], [11.2, 4252.0], [11.3, 4252.0], [11.4, 4252.0], [11.5, 4252.0], [11.6, 4252.0], [11.7, 4252.0], [11.8, 4252.0], [11.9, 4252.0], [12.0, 5233.0], [12.1, 5233.0], [12.2, 5233.0], [12.3, 5233.0], [12.4, 5233.0], [12.5, 5233.0], [12.6, 5233.0], [12.7, 5233.0], [12.8, 5233.0], [12.9, 5233.0], [13.0, 5457.0], [13.1, 5457.0], [13.2, 5457.0], [13.3, 5457.0], [13.4, 5457.0], [13.5, 5457.0], [13.6, 5457.0], [13.7, 5457.0], [13.8, 5457.0], [13.9, 5457.0], [14.0, 5515.0], [14.1, 5515.0], [14.2, 5515.0], [14.3, 5515.0], [14.4, 5515.0], [14.5, 5515.0], [14.6, 5515.0], [14.7, 5515.0], [14.8, 5515.0], [14.9, 5515.0], [15.0, 5869.0], [15.1, 5869.0], [15.2, 5869.0], [15.3, 5869.0], [15.4, 5869.0], [15.5, 5869.0], [15.6, 5869.0], [15.7, 5869.0], [15.8, 5869.0], [15.9, 5869.0], [16.0, 6219.0], [16.1, 6219.0], [16.2, 6219.0], [16.3, 6219.0], [16.4, 6219.0], [16.5, 6219.0], [16.6, 6219.0], [16.7, 6219.0], [16.8, 6219.0], [16.9, 6219.0], [17.0, 6674.0], [17.1, 6674.0], [17.2, 6674.0], [17.3, 6674.0], [17.4, 6674.0], [17.5, 6674.0], [17.6, 6674.0], [17.7, 6674.0], [17.8, 6674.0], [17.9, 6674.0], [18.0, 6821.0], [18.1, 6821.0], [18.2, 6821.0], [18.3, 6821.0], [18.4, 6821.0], [18.5, 6821.0], [18.6, 6821.0], [18.7, 6821.0], [18.8, 6821.0], [18.9, 6821.0], [19.0, 6967.0], [19.1, 6967.0], [19.2, 6967.0], [19.3, 6967.0], [19.4, 6967.0], [19.5, 6967.0], [19.6, 6967.0], [19.7, 6967.0], [19.8, 6967.0], [19.9, 6967.0], [20.0, 7237.0], [20.1, 7237.0], [20.2, 7237.0], [20.3, 7237.0], [20.4, 7237.0], [20.5, 7237.0], [20.6, 7237.0], [20.7, 7237.0], [20.8, 7237.0], [20.9, 7237.0], [21.0, 7241.0], [21.1, 7241.0], [21.2, 7241.0], [21.3, 7241.0], [21.4, 7241.0], [21.5, 7241.0], [21.6, 7241.0], [21.7, 7241.0], [21.8, 7241.0], [21.9, 7241.0], [22.0, 7268.0], [22.1, 7268.0], [22.2, 7268.0], [22.3, 7268.0], [22.4, 7268.0], [22.5, 7268.0], [22.6, 7268.0], [22.7, 7268.0], [22.8, 7268.0], [22.9, 7268.0], [23.0, 7323.0], [23.1, 7323.0], [23.2, 7323.0], [23.3, 7323.0], [23.4, 7323.0], [23.5, 7323.0], [23.6, 7323.0], [23.7, 7323.0], [23.8, 7323.0], [23.9, 7323.0], [24.0, 7412.0], [24.1, 7412.0], [24.2, 7412.0], [24.3, 7412.0], [24.4, 7412.0], [24.5, 7412.0], [24.6, 7412.0], [24.7, 7412.0], [24.8, 7412.0], [24.9, 7412.0], [25.0, 7506.0], [25.1, 7506.0], [25.2, 7506.0], [25.3, 7506.0], [25.4, 7506.0], [25.5, 7506.0], [25.6, 7506.0], [25.7, 7506.0], [25.8, 7506.0], [25.9, 7506.0], [26.0, 7527.0], [26.1, 7527.0], [26.2, 7527.0], [26.3, 7527.0], [26.4, 7527.0], [26.5, 7527.0], [26.6, 7527.0], [26.7, 7527.0], [26.8, 7527.0], [26.9, 7527.0], [27.0, 7529.0], [27.1, 7529.0], [27.2, 7529.0], [27.3, 7529.0], [27.4, 7529.0], [27.5, 7529.0], [27.6, 7529.0], [27.7, 7529.0], [27.8, 7529.0], [27.9, 7529.0], [28.0, 7552.0], [28.1, 7552.0], [28.2, 7552.0], [28.3, 7552.0], [28.4, 7552.0], [28.5, 7552.0], [28.6, 7552.0], [28.7, 7552.0], [28.8, 7552.0], [28.9, 7552.0], [29.0, 7791.0], [29.1, 7791.0], [29.2, 7791.0], [29.3, 7791.0], [29.4, 7791.0], [29.5, 7791.0], [29.6, 7791.0], [29.7, 7791.0], [29.8, 7791.0], [29.9, 7791.0], [30.0, 7850.0], [30.1, 7850.0], [30.2, 7850.0], [30.3, 7850.0], [30.4, 7850.0], [30.5, 7850.0], [30.6, 7850.0], [30.7, 7850.0], [30.8, 7850.0], [30.9, 7850.0], [31.0, 7893.0], [31.1, 7893.0], [31.2, 7893.0], [31.3, 7893.0], [31.4, 7893.0], [31.5, 7893.0], [31.6, 7893.0], [31.7, 7893.0], [31.8, 7893.0], [31.9, 7893.0], [32.0, 7951.0], [32.1, 7951.0], [32.2, 7951.0], [32.3, 7951.0], [32.4, 7951.0], [32.5, 7951.0], [32.6, 7951.0], [32.7, 7951.0], [32.8, 7951.0], [32.9, 7951.0], [33.0, 8109.0], [33.1, 8109.0], [33.2, 8109.0], [33.3, 8109.0], [33.4, 8109.0], [33.5, 8109.0], [33.6, 8109.0], [33.7, 8109.0], [33.8, 8109.0], [33.9, 8109.0], [34.0, 8155.0], [34.1, 8155.0], [34.2, 8155.0], [34.3, 8155.0], [34.4, 8155.0], [34.5, 8155.0], [34.6, 8155.0], [34.7, 8155.0], [34.8, 8155.0], [34.9, 8155.0], [35.0, 8200.0], [35.1, 8200.0], [35.2, 8200.0], [35.3, 8200.0], [35.4, 8200.0], [35.5, 8200.0], [35.6, 8200.0], [35.7, 8200.0], [35.8, 8200.0], [35.9, 8200.0], [36.0, 8267.0], [36.1, 8267.0], [36.2, 8267.0], [36.3, 8267.0], [36.4, 8267.0], [36.5, 8267.0], [36.6, 8267.0], [36.7, 8267.0], [36.8, 8267.0], [36.9, 8267.0], [37.0, 8375.0], [37.1, 8375.0], [37.2, 8375.0], [37.3, 8375.0], [37.4, 8375.0], [37.5, 8375.0], [37.6, 8375.0], [37.7, 8375.0], [37.8, 8375.0], [37.9, 8375.0], [38.0, 8417.0], [38.1, 8417.0], [38.2, 8417.0], [38.3, 8417.0], [38.4, 8417.0], [38.5, 8417.0], [38.6, 8417.0], [38.7, 8417.0], [38.8, 8417.0], [38.9, 8417.0], [39.0, 8552.0], [39.1, 8552.0], [39.2, 8552.0], [39.3, 8552.0], [39.4, 8552.0], [39.5, 8552.0], [39.6, 8552.0], [39.7, 8552.0], [39.8, 8552.0], [39.9, 8552.0], [40.0, 8555.0], [40.1, 8555.0], [40.2, 8555.0], [40.3, 8555.0], [40.4, 8555.0], [40.5, 8555.0], [40.6, 8555.0], [40.7, 8555.0], [40.8, 8555.0], [40.9, 8555.0], [41.0, 8565.0], [41.1, 8565.0], [41.2, 8565.0], [41.3, 8565.0], [41.4, 8565.0], [41.5, 8565.0], [41.6, 8565.0], [41.7, 8565.0], [41.8, 8565.0], [41.9, 8565.0], [42.0, 8568.0], [42.1, 8568.0], [42.2, 8568.0], [42.3, 8568.0], [42.4, 8568.0], [42.5, 8568.0], [42.6, 8568.0], [42.7, 8568.0], [42.8, 8568.0], [42.9, 8568.0], [43.0, 8589.0], [43.1, 8589.0], [43.2, 8589.0], [43.3, 8589.0], [43.4, 8589.0], [43.5, 8589.0], [43.6, 8589.0], [43.7, 8589.0], [43.8, 8589.0], [43.9, 8589.0], [44.0, 8725.0], [44.1, 8725.0], [44.2, 8725.0], [44.3, 8725.0], [44.4, 8725.0], [44.5, 8725.0], [44.6, 8725.0], [44.7, 8725.0], [44.8, 8725.0], [44.9, 8725.0], [45.0, 8777.0], [45.1, 8777.0], [45.2, 8777.0], [45.3, 8777.0], [45.4, 8777.0], [45.5, 8777.0], [45.6, 8777.0], [45.7, 8777.0], [45.8, 8777.0], [45.9, 8777.0], [46.0, 8855.0], [46.1, 8855.0], [46.2, 8855.0], [46.3, 8855.0], [46.4, 8855.0], [46.5, 8855.0], [46.6, 8855.0], [46.7, 8855.0], [46.8, 8855.0], [46.9, 8855.0], [47.0, 8892.0], [47.1, 8892.0], [47.2, 8892.0], [47.3, 8892.0], [47.4, 8892.0], [47.5, 8892.0], [47.6, 8892.0], [47.7, 8892.0], [47.8, 8892.0], [47.9, 8892.0], [48.0, 8955.0], [48.1, 8955.0], [48.2, 8955.0], [48.3, 8955.0], [48.4, 8955.0], [48.5, 8955.0], [48.6, 8955.0], [48.7, 8955.0], [48.8, 8955.0], [48.9, 8955.0], [49.0, 9108.0], [49.1, 9108.0], [49.2, 9108.0], [49.3, 9108.0], [49.4, 9108.0], [49.5, 9108.0], [49.6, 9108.0], [49.7, 9108.0], [49.8, 9108.0], [49.9, 9108.0], [50.0, 9110.0], [50.1, 9110.0], [50.2, 9110.0], [50.3, 9110.0], [50.4, 9110.0], [50.5, 9110.0], [50.6, 9110.0], [50.7, 9110.0], [50.8, 9110.0], [50.9, 9110.0], [51.0, 9180.0], [51.1, 9180.0], [51.2, 9180.0], [51.3, 9180.0], [51.4, 9180.0], [51.5, 9180.0], [51.6, 9180.0], [51.7, 9180.0], [51.8, 9180.0], [51.9, 9180.0], [52.0, 9240.0], [52.1, 9240.0], [52.2, 9240.0], [52.3, 9240.0], [52.4, 9240.0], [52.5, 9240.0], [52.6, 9240.0], [52.7, 9240.0], [52.8, 9240.0], [52.9, 9240.0], [53.0, 9252.0], [53.1, 9252.0], [53.2, 9252.0], [53.3, 9252.0], [53.4, 9252.0], [53.5, 9252.0], [53.6, 9252.0], [53.7, 9252.0], [53.8, 9252.0], [53.9, 9252.0], [54.0, 9259.0], [54.1, 9259.0], [54.2, 9259.0], [54.3, 9259.0], [54.4, 9259.0], [54.5, 9259.0], [54.6, 9259.0], [54.7, 9259.0], [54.8, 9259.0], [54.9, 9259.0], [55.0, 9275.0], [55.1, 9275.0], [55.2, 9275.0], [55.3, 9275.0], [55.4, 9275.0], [55.5, 9275.0], [55.6, 9275.0], [55.7, 9275.0], [55.8, 9275.0], [55.9, 9275.0], [56.0, 9279.0], [56.1, 9279.0], [56.2, 9279.0], [56.3, 9279.0], [56.4, 9279.0], [56.5, 9279.0], [56.6, 9279.0], [56.7, 9279.0], [56.8, 9279.0], [56.9, 9279.0], [57.0, 9341.0], [57.1, 9341.0], [57.2, 9341.0], [57.3, 9341.0], [57.4, 9341.0], [57.5, 9341.0], [57.6, 9341.0], [57.7, 9341.0], [57.8, 9341.0], [57.9, 9341.0], [58.0, 9412.0], [58.1, 9412.0], [58.2, 9412.0], [58.3, 9412.0], [58.4, 9412.0], [58.5, 9412.0], [58.6, 9412.0], [58.7, 9412.0], [58.8, 9412.0], [58.9, 9412.0], [59.0, 9458.0], [59.1, 9458.0], [59.2, 9458.0], [59.3, 9458.0], [59.4, 9458.0], [59.5, 9458.0], [59.6, 9458.0], [59.7, 9458.0], [59.8, 9458.0], [59.9, 9458.0], [60.0, 9551.0], [60.1, 9551.0], [60.2, 9551.0], [60.3, 9551.0], [60.4, 9551.0], [60.5, 9551.0], [60.6, 9551.0], [60.7, 9551.0], [60.8, 9551.0], [60.9, 9551.0], [61.0, 9634.0], [61.1, 9634.0], [61.2, 9634.0], [61.3, 9634.0], [61.4, 9634.0], [61.5, 9634.0], [61.6, 9634.0], [61.7, 9634.0], [61.8, 9634.0], [61.9, 9634.0], [62.0, 9711.0], [62.1, 9711.0], [62.2, 9711.0], [62.3, 9711.0], [62.4, 9711.0], [62.5, 9711.0], [62.6, 9711.0], [62.7, 9711.0], [62.8, 9711.0], [62.9, 9711.0], [63.0, 9724.0], [63.1, 9724.0], [63.2, 9724.0], [63.3, 9724.0], [63.4, 9724.0], [63.5, 9724.0], [63.6, 9724.0], [63.7, 9724.0], [63.8, 9724.0], [63.9, 9724.0], [64.0, 9788.0], [64.1, 9788.0], [64.2, 9788.0], [64.3, 9788.0], [64.4, 9788.0], [64.5, 9788.0], [64.6, 9788.0], [64.7, 9788.0], [64.8, 9788.0], [64.9, 9788.0], [65.0, 9845.0], [65.1, 9845.0], [65.2, 9845.0], [65.3, 9845.0], [65.4, 9845.0], [65.5, 9845.0], [65.6, 9845.0], [65.7, 9845.0], [65.8, 9845.0], [65.9, 9845.0], [66.0, 9921.0], [66.1, 9921.0], [66.2, 9921.0], [66.3, 9921.0], [66.4, 9921.0], [66.5, 9921.0], [66.6, 9921.0], [66.7, 9921.0], [66.8, 9921.0], [66.9, 9921.0], [67.0, 9926.0], [67.1, 9926.0], [67.2, 9926.0], [67.3, 9926.0], [67.4, 9926.0], [67.5, 9926.0], [67.6, 9926.0], [67.7, 9926.0], [67.8, 9926.0], [67.9, 9926.0], [68.0, 9961.0], [68.1, 9961.0], [68.2, 9961.0], [68.3, 9961.0], [68.4, 9961.0], [68.5, 9961.0], [68.6, 9961.0], [68.7, 9961.0], [68.8, 9961.0], [68.9, 9961.0], [69.0, 10046.0], [69.1, 10046.0], [69.2, 10046.0], [69.3, 10046.0], [69.4, 10046.0], [69.5, 10046.0], [69.6, 10046.0], [69.7, 10046.0], [69.8, 10046.0], [69.9, 10046.0], [70.0, 10053.0], [70.1, 10053.0], [70.2, 10053.0], [70.3, 10053.0], [70.4, 10053.0], [70.5, 10053.0], [70.6, 10053.0], [70.7, 10053.0], [70.8, 10053.0], [70.9, 10053.0], [71.0, 10080.0], [71.1, 10080.0], [71.2, 10080.0], [71.3, 10080.0], [71.4, 10080.0], [71.5, 10080.0], [71.6, 10080.0], [71.7, 10080.0], [71.8, 10080.0], [71.9, 10080.0], [72.0, 10105.0], [72.1, 10105.0], [72.2, 10105.0], [72.3, 10105.0], [72.4, 10105.0], [72.5, 10105.0], [72.6, 10105.0], [72.7, 10105.0], [72.8, 10105.0], [72.9, 10105.0], [73.0, 10517.0], [73.1, 10517.0], [73.2, 10517.0], [73.3, 10517.0], [73.4, 10517.0], [73.5, 10517.0], [73.6, 10517.0], [73.7, 10517.0], [73.8, 10517.0], [73.9, 10517.0], [74.0, 10534.0], [74.1, 10534.0], [74.2, 10534.0], [74.3, 10534.0], [74.4, 10534.0], [74.5, 10534.0], [74.6, 10534.0], [74.7, 10534.0], [74.8, 10534.0], [74.9, 10534.0], [75.0, 10581.0], [75.1, 10581.0], [75.2, 10581.0], [75.3, 10581.0], [75.4, 10581.0], [75.5, 10581.0], [75.6, 10581.0], [75.7, 10581.0], [75.8, 10581.0], [75.9, 10581.0], [76.0, 10608.0], [76.1, 10608.0], [76.2, 10608.0], [76.3, 10608.0], [76.4, 10608.0], [76.5, 10608.0], [76.6, 10608.0], [76.7, 10608.0], [76.8, 10608.0], [76.9, 10608.0], [77.0, 10652.0], [77.1, 10652.0], [77.2, 10652.0], [77.3, 10652.0], [77.4, 10652.0], [77.5, 10652.0], [77.6, 10652.0], [77.7, 10652.0], [77.8, 10652.0], [77.9, 10652.0], [78.0, 10742.0], [78.1, 10742.0], [78.2, 10742.0], [78.3, 10742.0], [78.4, 10742.0], [78.5, 10742.0], [78.6, 10742.0], [78.7, 10742.0], [78.8, 10742.0], [78.9, 10742.0], [79.0, 10787.0], [79.1, 10787.0], [79.2, 10787.0], [79.3, 10787.0], [79.4, 10787.0], [79.5, 10787.0], [79.6, 10787.0], [79.7, 10787.0], [79.8, 10787.0], [79.9, 10787.0], [80.0, 10862.0], [80.1, 10862.0], [80.2, 10862.0], [80.3, 10862.0], [80.4, 10862.0], [80.5, 10862.0], [80.6, 10862.0], [80.7, 10862.0], [80.8, 10862.0], [80.9, 10862.0], [81.0, 10889.0], [81.1, 10889.0], [81.2, 10889.0], [81.3, 10889.0], [81.4, 10889.0], [81.5, 10889.0], [81.6, 10889.0], [81.7, 10889.0], [81.8, 10889.0], [81.9, 10889.0], [82.0, 10935.0], [82.1, 10935.0], [82.2, 10935.0], [82.3, 10935.0], [82.4, 10935.0], [82.5, 10935.0], [82.6, 10935.0], [82.7, 10935.0], [82.8, 10935.0], [82.9, 10935.0], [83.0, 11079.0], [83.1, 11079.0], [83.2, 11079.0], [83.3, 11079.0], [83.4, 11079.0], [83.5, 11079.0], [83.6, 11079.0], [83.7, 11079.0], [83.8, 11079.0], [83.9, 11079.0], [84.0, 11116.0], [84.1, 11116.0], [84.2, 11116.0], [84.3, 11116.0], [84.4, 11116.0], [84.5, 11116.0], [84.6, 11116.0], [84.7, 11116.0], [84.8, 11116.0], [84.9, 11116.0], [85.0, 11147.0], [85.1, 11147.0], [85.2, 11147.0], [85.3, 11147.0], [85.4, 11147.0], [85.5, 11147.0], [85.6, 11147.0], [85.7, 11147.0], [85.8, 11147.0], [85.9, 11147.0], [86.0, 11153.0], [86.1, 11153.0], [86.2, 11153.0], [86.3, 11153.0], [86.4, 11153.0], [86.5, 11153.0], [86.6, 11153.0], [86.7, 11153.0], [86.8, 11153.0], [86.9, 11153.0], [87.0, 11298.0], [87.1, 11298.0], [87.2, 11298.0], [87.3, 11298.0], [87.4, 11298.0], [87.5, 11298.0], [87.6, 11298.0], [87.7, 11298.0], [87.8, 11298.0], [87.9, 11298.0], [88.0, 11349.0], [88.1, 11349.0], [88.2, 11349.0], [88.3, 11349.0], [88.4, 11349.0], [88.5, 11349.0], [88.6, 11349.0], [88.7, 11349.0], [88.8, 11349.0], [88.9, 11349.0], [89.0, 11421.0], [89.1, 11421.0], [89.2, 11421.0], [89.3, 11421.0], [89.4, 11421.0], [89.5, 11421.0], [89.6, 11421.0], [89.7, 11421.0], [89.8, 11421.0], [89.9, 11421.0], [90.0, 11429.0], [90.1, 11429.0], [90.2, 11429.0], [90.3, 11429.0], [90.4, 11429.0], [90.5, 11429.0], [90.6, 11429.0], [90.7, 11429.0], [90.8, 11429.0], [90.9, 11429.0], [91.0, 11466.0], [91.1, 11466.0], [91.2, 11466.0], [91.3, 11466.0], [91.4, 11466.0], [91.5, 11466.0], [91.6, 11466.0], [91.7, 11466.0], [91.8, 11466.0], [91.9, 11466.0], [92.0, 11582.0], [92.1, 11582.0], [92.2, 11582.0], [92.3, 11582.0], [92.4, 11582.0], [92.5, 11582.0], [92.6, 11582.0], [92.7, 11582.0], [92.8, 11582.0], [92.9, 11582.0], [93.0, 11603.0], [93.1, 11603.0], [93.2, 11603.0], [93.3, 11603.0], [93.4, 11603.0], [93.5, 11603.0], [93.6, 11603.0], [93.7, 11603.0], [93.8, 11603.0], [93.9, 11603.0], [94.0, 11633.0], [94.1, 11633.0], [94.2, 11633.0], [94.3, 11633.0], [94.4, 11633.0], [94.5, 11633.0], [94.6, 11633.0], [94.7, 11633.0], [94.8, 11633.0], [94.9, 11633.0], [95.0, 11728.0], [95.1, 11728.0], [95.2, 11728.0], [95.3, 11728.0], [95.4, 11728.0], [95.5, 11728.0], [95.6, 11728.0], [95.7, 11728.0], [95.8, 11728.0], [95.9, 11728.0], [96.0, 11787.0], [96.1, 11787.0], [96.2, 11787.0], [96.3, 11787.0], [96.4, 11787.0], [96.5, 11787.0], [96.6, 11787.0], [96.7, 11787.0], [96.8, 11787.0], [96.9, 11787.0], [97.0, 11938.0], [97.1, 11938.0], [97.2, 11938.0], [97.3, 11938.0], [97.4, 11938.0], [97.5, 11938.0], [97.6, 11938.0], [97.7, 11938.0], [97.8, 11938.0], [97.9, 11938.0], [98.0, 12019.0], [98.1, 12019.0], [98.2, 12019.0], [98.3, 12019.0], [98.4, 12019.0], [98.5, 12019.0], [98.6, 12019.0], [98.7, 12019.0], [98.8, 12019.0], [98.9, 12019.0], [99.0, 12254.0], [99.1, 12254.0], [99.2, 12254.0], [99.3, 12254.0], [99.4, 12254.0], [99.5, 12254.0], [99.6, 12254.0], [99.7, 12254.0], [99.8, 12254.0], [99.9, 12254.0]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[0.0, 379.0], [0.1, 379.0], [0.2, 379.0], [0.3, 379.0], [0.4, 379.0], [0.5, 379.0], [0.6, 379.0], [0.7, 379.0], [0.8, 379.0], [0.9, 379.0], [1.0, 486.0], [1.1, 486.0], [1.2, 486.0], [1.3, 486.0], [1.4, 486.0], [1.5, 486.0], [1.6, 486.0], [1.7, 486.0], [1.8, 486.0], [1.9, 486.0], [2.0, 511.0], [2.1, 511.0], [2.2, 511.0], [2.3, 511.0], [2.4, 511.0], [2.5, 511.0], [2.6, 511.0], [2.7, 511.0], [2.8, 511.0], [2.9, 511.0], [3.0, 512.0], [3.1, 512.0], [3.2, 512.0], [3.3, 512.0], [3.4, 512.0], [3.5, 512.0], [3.6, 512.0], [3.7, 512.0], [3.8, 512.0], [3.9, 512.0], [4.0, 549.0], [4.1, 549.0], [4.2, 549.0], [4.3, 549.0], [4.4, 549.0], [4.5, 549.0], [4.6, 549.0], [4.7, 549.0], [4.8, 549.0], [4.9, 549.0], [5.0, 574.0], [5.1, 574.0], [5.2, 574.0], [5.3, 574.0], [5.4, 574.0], [5.5, 574.0], [5.6, 574.0], [5.7, 574.0], [5.8, 574.0], [5.9, 574.0], [6.0, 610.0], [6.1, 610.0], [6.2, 610.0], [6.3, 610.0], [6.4, 610.0], [6.5, 610.0], [6.6, 610.0], [6.7, 610.0], [6.8, 610.0], [6.9, 610.0], [7.0, 611.0], [7.1, 611.0], [7.2, 611.0], [7.3, 611.0], [7.4, 611.0], [7.5, 611.0], [7.6, 611.0], [7.7, 611.0], [7.8, 611.0], [7.9, 611.0], [8.0, 614.0], [8.1, 614.0], [8.2, 614.0], [8.3, 614.0], [8.4, 614.0], [8.5, 614.0], [8.6, 614.0], [8.7, 614.0], [8.8, 614.0], [8.9, 614.0], [9.0, 614.0], [9.1, 614.0], [9.2, 614.0], [9.3, 614.0], [9.4, 614.0], [9.5, 614.0], [9.6, 614.0], [9.7, 614.0], [9.8, 614.0], [9.9, 614.0], [10.0, 615.0], [10.1, 615.0], [10.2, 615.0], [10.3, 615.0], [10.4, 615.0], [10.5, 615.0], [10.6, 615.0], [10.7, 615.0], [10.8, 615.0], [10.9, 615.0], [11.0, 615.0], [11.1, 615.0], [11.2, 615.0], [11.3, 615.0], [11.4, 615.0], [11.5, 615.0], [11.6, 615.0], [11.7, 615.0], [11.8, 615.0], [11.9, 615.0], [12.0, 617.0], [12.1, 617.0], [12.2, 617.0], [12.3, 617.0], [12.4, 617.0], [12.5, 617.0], [12.6, 617.0], [12.7, 617.0], [12.8, 617.0], [12.9, 617.0], [13.0, 619.0], [13.1, 619.0], [13.2, 619.0], [13.3, 619.0], [13.4, 619.0], [13.5, 619.0], [13.6, 619.0], [13.7, 619.0], [13.8, 619.0], [13.9, 619.0], [14.0, 621.0], [14.1, 621.0], [14.2, 621.0], [14.3, 621.0], [14.4, 621.0], [14.5, 621.0], [14.6, 621.0], [14.7, 621.0], [14.8, 621.0], [14.9, 621.0], [15.0, 663.0], [15.1, 663.0], [15.2, 663.0], [15.3, 663.0], [15.4, 663.0], [15.5, 663.0], [15.6, 663.0], [15.7, 663.0], [15.8, 663.0], [15.9, 663.0], [16.0, 666.0], [16.1, 666.0], [16.2, 666.0], [16.3, 666.0], [16.4, 666.0], [16.5, 666.0], [16.6, 666.0], [16.7, 666.0], [16.8, 666.0], [16.9, 666.0], [17.0, 668.0], [17.1, 668.0], [17.2, 668.0], [17.3, 668.0], [17.4, 668.0], [17.5, 668.0], [17.6, 668.0], [17.7, 668.0], [17.8, 668.0], [17.9, 668.0], [18.0, 675.0], [18.1, 675.0], [18.2, 675.0], [18.3, 675.0], [18.4, 675.0], [18.5, 675.0], [18.6, 675.0], [18.7, 675.0], [18.8, 675.0], [18.9, 675.0], [19.0, 697.0], [19.1, 697.0], [19.2, 697.0], [19.3, 697.0], [19.4, 697.0], [19.5, 697.0], [19.6, 697.0], [19.7, 697.0], [19.8, 697.0], [19.9, 697.0], [20.0, 701.0], [20.1, 701.0], [20.2, 701.0], [20.3, 701.0], [20.4, 701.0], [20.5, 701.0], [20.6, 701.0], [20.7, 701.0], [20.8, 701.0], [20.9, 701.0], [21.0, 710.0], [21.1, 710.0], [21.2, 710.0], [21.3, 710.0], [21.4, 710.0], [21.5, 710.0], [21.6, 710.0], [21.7, 710.0], [21.8, 710.0], [21.9, 710.0], [22.0, 713.0], [22.1, 713.0], [22.2, 713.0], [22.3, 713.0], [22.4, 713.0], [22.5, 713.0], [22.6, 713.0], [22.7, 713.0], [22.8, 713.0], [22.9, 713.0], [23.0, 716.0], [23.1, 716.0], [23.2, 716.0], [23.3, 716.0], [23.4, 716.0], [23.5, 716.0], [23.6, 716.0], [23.7, 716.0], [23.8, 716.0], [23.9, 716.0], [24.0, 716.0], [24.1, 716.0], [24.2, 716.0], [24.3, 716.0], [24.4, 716.0], [24.5, 716.0], [24.6, 716.0], [24.7, 716.0], [24.8, 716.0], [24.9, 716.0], [25.0, 716.0], [25.1, 716.0], [25.2, 716.0], [25.3, 716.0], [25.4, 716.0], [25.5, 716.0], [25.6, 716.0], [25.7, 716.0], [25.8, 716.0], [25.9, 716.0], [26.0, 717.0], [26.1, 717.0], [26.2, 717.0], [26.3, 717.0], [26.4, 717.0], [26.5, 717.0], [26.6, 717.0], [26.7, 717.0], [26.8, 717.0], [26.9, 717.0], [27.0, 717.0], [27.1, 717.0], [27.2, 717.0], [27.3, 717.0], [27.4, 717.0], [27.5, 717.0], [27.6, 717.0], [27.7, 717.0], [27.8, 717.0], [27.9, 717.0], [28.0, 717.0], [28.1, 717.0], [28.2, 717.0], [28.3, 717.0], [28.4, 717.0], [28.5, 717.0], [28.6, 717.0], [28.7, 717.0], [28.8, 717.0], [28.9, 717.0], [29.0, 718.0], [29.1, 718.0], [29.2, 718.0], [29.3, 718.0], [29.4, 718.0], [29.5, 718.0], [29.6, 718.0], [29.7, 718.0], [29.8, 718.0], [29.9, 718.0], [30.0, 718.0], [30.1, 718.0], [30.2, 718.0], [30.3, 718.0], [30.4, 718.0], [30.5, 718.0], [30.6, 718.0], [30.7, 718.0], [30.8, 718.0], [30.9, 718.0], [31.0, 718.0], [31.1, 718.0], [31.2, 718.0], [31.3, 718.0], [31.4, 718.0], [31.5, 718.0], [31.6, 718.0], [31.7, 718.0], [31.8, 718.0], [31.9, 718.0], [32.0, 719.0], [32.1, 719.0], [32.2, 719.0], [32.3, 719.0], [32.4, 719.0], [32.5, 719.0], [32.6, 719.0], [32.7, 719.0], [32.8, 719.0], [32.9, 719.0], [33.0, 719.0], [33.1, 719.0], [33.2, 719.0], [33.3, 719.0], [33.4, 719.0], [33.5, 719.0], [33.6, 719.0], [33.7, 719.0], [33.8, 719.0], [33.9, 719.0], [34.0, 720.0], [34.1, 720.0], [34.2, 720.0], [34.3, 720.0], [34.4, 720.0], [34.5, 720.0], [34.6, 720.0], [34.7, 720.0], [34.8, 720.0], [34.9, 720.0], [35.0, 722.0], [35.1, 722.0], [35.2, 722.0], [35.3, 722.0], [35.4, 722.0], [35.5, 722.0], [35.6, 722.0], [35.7, 722.0], [35.8, 722.0], [35.9, 722.0], [36.0, 738.0], [36.1, 738.0], [36.2, 738.0], [36.3, 738.0], [36.4, 738.0], [36.5, 738.0], [36.6, 738.0], [36.7, 738.0], [36.8, 738.0], [36.9, 738.0], [37.0, 738.0], [37.1, 738.0], [37.2, 738.0], [37.3, 738.0], [37.4, 738.0], [37.5, 738.0], [37.6, 738.0], [37.7, 738.0], [37.8, 738.0], [37.9, 738.0], [38.0, 753.0], [38.1, 753.0], [38.2, 753.0], [38.3, 753.0], [38.4, 753.0], [38.5, 753.0], [38.6, 753.0], [38.7, 753.0], [38.8, 753.0], [38.9, 753.0], [39.0, 754.0], [39.1, 754.0], [39.2, 754.0], [39.3, 754.0], [39.4, 754.0], [39.5, 754.0], [39.6, 754.0], [39.7, 754.0], [39.8, 754.0], [39.9, 754.0], [40.0, 759.0], [40.1, 759.0], [40.2, 759.0], [40.3, 759.0], [40.4, 759.0], [40.5, 759.0], [40.6, 759.0], [40.7, 759.0], [40.8, 759.0], [40.9, 759.0], [41.0, 765.0], [41.1, 765.0], [41.2, 765.0], [41.3, 765.0], [41.4, 765.0], [41.5, 765.0], [41.6, 765.0], [41.7, 765.0], [41.8, 765.0], [41.9, 765.0], [42.0, 772.0], [42.1, 772.0], [42.2, 772.0], [42.3, 772.0], [42.4, 772.0], [42.5, 772.0], [42.6, 772.0], [42.7, 772.0], [42.8, 772.0], [42.9, 772.0], [43.0, 772.0], [43.1, 772.0], [43.2, 772.0], [43.3, 772.0], [43.4, 772.0], [43.5, 772.0], [43.6, 772.0], [43.7, 772.0], [43.8, 772.0], [43.9, 772.0], [44.0, 773.0], [44.1, 773.0], [44.2, 773.0], [44.3, 773.0], [44.4, 773.0], [44.5, 773.0], [44.6, 773.0], [44.7, 773.0], [44.8, 773.0], [44.9, 773.0], [45.0, 792.0], [45.1, 792.0], [45.2, 792.0], [45.3, 792.0], [45.4, 792.0], [45.5, 792.0], [45.6, 792.0], [45.7, 792.0], [45.8, 792.0], [45.9, 792.0], [46.0, 795.0], [46.1, 795.0], [46.2, 795.0], [46.3, 795.0], [46.4, 795.0], [46.5, 795.0], [46.6, 795.0], [46.7, 795.0], [46.8, 795.0], [46.9, 795.0], [47.0, 800.0], [47.1, 800.0], [47.2, 800.0], [47.3, 800.0], [47.4, 800.0], [47.5, 800.0], [47.6, 800.0], [47.7, 800.0], [47.8, 800.0], [47.9, 800.0], [48.0, 815.0], [48.1, 815.0], [48.2, 815.0], [48.3, 815.0], [48.4, 815.0], [48.5, 815.0], [48.6, 815.0], [48.7, 815.0], [48.8, 815.0], [48.9, 815.0], [49.0, 818.0], [49.1, 818.0], [49.2, 818.0], [49.3, 818.0], [49.4, 818.0], [49.5, 818.0], [49.6, 818.0], [49.7, 818.0], [49.8, 818.0], [49.9, 818.0], [50.0, 818.0], [50.1, 818.0], [50.2, 818.0], [50.3, 818.0], [50.4, 818.0], [50.5, 818.0], [50.6, 818.0], [50.7, 818.0], [50.8, 818.0], [50.9, 818.0], [51.0, 819.0], [51.1, 819.0], [51.2, 819.0], [51.3, 819.0], [51.4, 819.0], [51.5, 819.0], [51.6, 819.0], [51.7, 819.0], [51.8, 819.0], [51.9, 819.0], [52.0, 819.0], [52.1, 819.0], [52.2, 819.0], [52.3, 819.0], [52.4, 819.0], [52.5, 819.0], [52.6, 819.0], [52.7, 819.0], [52.8, 819.0], [52.9, 819.0], [53.0, 820.0], [53.1, 820.0], [53.2, 820.0], [53.3, 820.0], [53.4, 820.0], [53.5, 820.0], [53.6, 820.0], [53.7, 820.0], [53.8, 820.0], [53.9, 820.0], [54.0, 822.0], [54.1, 822.0], [54.2, 822.0], [54.3, 822.0], [54.4, 822.0], [54.5, 822.0], [54.6, 822.0], [54.7, 822.0], [54.8, 822.0], [54.9, 822.0], [55.0, 828.0], [55.1, 828.0], [55.2, 828.0], [55.3, 828.0], [55.4, 828.0], [55.5, 828.0], [55.6, 828.0], [55.7, 828.0], [55.8, 828.0], [55.9, 828.0], [56.0, 828.0], [56.1, 828.0], [56.2, 828.0], [56.3, 828.0], [56.4, 828.0], [56.5, 828.0], [56.6, 828.0], [56.7, 828.0], [56.8, 828.0], [56.9, 828.0], [57.0, 836.0], [57.1, 836.0], [57.2, 836.0], [57.3, 836.0], [57.4, 836.0], [57.5, 836.0], [57.6, 836.0], [57.7, 836.0], [57.8, 836.0], [57.9, 836.0], [58.0, 849.0], [58.1, 849.0], [58.2, 849.0], [58.3, 849.0], [58.4, 849.0], [58.5, 849.0], [58.6, 849.0], [58.7, 849.0], [58.8, 849.0], [58.9, 849.0], [59.0, 851.0], [59.1, 851.0], [59.2, 851.0], [59.3, 851.0], [59.4, 851.0], [59.5, 851.0], [59.6, 851.0], [59.7, 851.0], [59.8, 851.0], [59.9, 851.0], [60.0, 852.0], [60.1, 852.0], [60.2, 852.0], [60.3, 852.0], [60.4, 852.0], [60.5, 852.0], [60.6, 852.0], [60.7, 852.0], [60.8, 852.0], [60.9, 852.0], [61.0, 852.0], [61.1, 852.0], [61.2, 852.0], [61.3, 852.0], [61.4, 852.0], [61.5, 852.0], [61.6, 852.0], [61.7, 852.0], [61.8, 852.0], [61.9, 852.0], [62.0, 855.0], [62.1, 855.0], [62.2, 855.0], [62.3, 855.0], [62.4, 855.0], [62.5, 855.0], [62.6, 855.0], [62.7, 855.0], [62.8, 855.0], [62.9, 855.0], [63.0, 875.0], [63.1, 875.0], [63.2, 875.0], [63.3, 875.0], [63.4, 875.0], [63.5, 875.0], [63.6, 875.0], [63.7, 875.0], [63.8, 875.0], [63.9, 875.0], [64.0, 888.0], [64.1, 888.0], [64.2, 888.0], [64.3, 888.0], [64.4, 888.0], [64.5, 888.0], [64.6, 888.0], [64.7, 888.0], [64.8, 888.0], [64.9, 888.0], [65.0, 913.0], [65.1, 913.0], [65.2, 913.0], [65.3, 913.0], [65.4, 913.0], [65.5, 913.0], [65.6, 913.0], [65.7, 913.0], [65.8, 913.0], [65.9, 913.0], [66.0, 920.0], [66.1, 920.0], [66.2, 920.0], [66.3, 920.0], [66.4, 920.0], [66.5, 920.0], [66.6, 920.0], [66.7, 920.0], [66.8, 920.0], [66.9, 920.0], [67.0, 923.0], [67.1, 923.0], [67.2, 923.0], [67.3, 923.0], [67.4, 923.0], [67.5, 923.0], [67.6, 923.0], [67.7, 923.0], [67.8, 923.0], [67.9, 923.0], [68.0, 925.0], [68.1, 925.0], [68.2, 925.0], [68.3, 925.0], [68.4, 925.0], [68.5, 925.0], [68.6, 925.0], [68.7, 925.0], [68.8, 925.0], [68.9, 925.0], [69.0, 926.0], [69.1, 926.0], [69.2, 926.0], [69.3, 926.0], [69.4, 926.0], [69.5, 926.0], [69.6, 926.0], [69.7, 926.0], [69.8, 926.0], [69.9, 926.0], [70.0, 927.0], [70.1, 927.0], [70.2, 927.0], [70.3, 927.0], [70.4, 927.0], [70.5, 927.0], [70.6, 927.0], [70.7, 927.0], [70.8, 927.0], [70.9, 927.0], [71.0, 928.0], [71.1, 928.0], [71.2, 928.0], [71.3, 928.0], [71.4, 928.0], [71.5, 928.0], [71.6, 928.0], [71.7, 928.0], [71.8, 928.0], [71.9, 928.0], [72.0, 928.0], [72.1, 928.0], [72.2, 928.0], [72.3, 928.0], [72.4, 928.0], [72.5, 928.0], [72.6, 928.0], [72.7, 928.0], [72.8, 928.0], [72.9, 928.0], [73.0, 933.0], [73.1, 933.0], [73.2, 933.0], [73.3, 933.0], [73.4, 933.0], [73.5, 933.0], [73.6, 933.0], [73.7, 933.0], [73.8, 933.0], [73.9, 933.0], [74.0, 964.0], [74.1, 964.0], [74.2, 964.0], [74.3, 964.0], [74.4, 964.0], [74.5, 964.0], [74.6, 964.0], [74.7, 964.0], [74.8, 964.0], [74.9, 964.0], [75.0, 975.0], [75.1, 975.0], [75.2, 975.0], [75.3, 975.0], [75.4, 975.0], [75.5, 975.0], [75.6, 975.0], [75.7, 975.0], [75.8, 975.0], [75.9, 975.0], [76.0, 1025.0], [76.1, 1025.0], [76.2, 1025.0], [76.3, 1025.0], [76.4, 1025.0], [76.5, 1025.0], [76.6, 1025.0], [76.7, 1025.0], [76.8, 1025.0], [76.9, 1025.0], [77.0, 1026.0], [77.1, 1026.0], [77.2, 1026.0], [77.3, 1026.0], [77.4, 1026.0], [77.5, 1026.0], [77.6, 1026.0], [77.7, 1026.0], [77.8, 1026.0], [77.9, 1026.0], [78.0, 1028.0], [78.1, 1028.0], [78.2, 1028.0], [78.3, 1028.0], [78.4, 1028.0], [78.5, 1028.0], [78.6, 1028.0], [78.7, 1028.0], [78.8, 1028.0], [78.9, 1028.0], [79.0, 1030.0], [79.1, 1030.0], [79.2, 1030.0], [79.3, 1030.0], [79.4, 1030.0], [79.5, 1030.0], [79.6, 1030.0], [79.7, 1030.0], [79.8, 1030.0], [79.9, 1030.0], [80.0, 1039.0], [80.1, 1039.0], [80.2, 1039.0], [80.3, 1039.0], [80.4, 1039.0], [80.5, 1039.0], [80.6, 1039.0], [80.7, 1039.0], [80.8, 1039.0], [80.9, 1039.0], [81.0, 1040.0], [81.1, 1040.0], [81.2, 1040.0], [81.3, 1040.0], [81.4, 1040.0], [81.5, 1040.0], [81.6, 1040.0], [81.7, 1040.0], [81.8, 1040.0], [81.9, 1040.0], [82.0, 1104.0], [82.1, 1104.0], [82.2, 1104.0], [82.3, 1104.0], [82.4, 1104.0], [82.5, 1104.0], [82.6, 1104.0], [82.7, 1104.0], [82.8, 1104.0], [82.9, 1104.0], [83.0, 1169.0], [83.1, 1169.0], [83.2, 1169.0], [83.3, 1169.0], [83.4, 1169.0], [83.5, 1169.0], [83.6, 1169.0], [83.7, 1169.0], [83.8, 1169.0], [83.9, 1169.0], [84.0, 1171.0], [84.1, 1171.0], [84.2, 1171.0], [84.3, 1171.0], [84.4, 1171.0], [84.5, 1171.0], [84.6, 1171.0], [84.7, 1171.0], [84.8, 1171.0], [84.9, 1171.0], [85.0, 1228.0], [85.1, 1228.0], [85.2, 1228.0], [85.3, 1228.0], [85.4, 1228.0], [85.5, 1228.0], [85.6, 1228.0], [85.7, 1228.0], [85.8, 1228.0], [85.9, 1228.0], [86.0, 1232.0], [86.1, 1232.0], [86.2, 1232.0], [86.3, 1232.0], [86.4, 1232.0], [86.5, 1232.0], [86.6, 1232.0], [86.7, 1232.0], [86.8, 1232.0], [86.9, 1232.0], [87.0, 1235.0], [87.1, 1235.0], [87.2, 1235.0], [87.3, 1235.0], [87.4, 1235.0], [87.5, 1235.0], [87.6, 1235.0], [87.7, 1235.0], [87.8, 1235.0], [87.9, 1235.0], [88.0, 1245.0], [88.1, 1245.0], [88.2, 1245.0], [88.3, 1245.0], [88.4, 1245.0], [88.5, 1245.0], [88.6, 1245.0], [88.7, 1245.0], [88.8, 1245.0], [88.9, 1245.0], [89.0, 1248.0], [89.1, 1248.0], [89.2, 1248.0], [89.3, 1248.0], [89.4, 1248.0], [89.5, 1248.0], [89.6, 1248.0], [89.7, 1248.0], [89.8, 1248.0], [89.9, 1248.0], [90.0, 1275.0], [90.1, 1275.0], [90.2, 1275.0], [90.3, 1275.0], [90.4, 1275.0], [90.5, 1275.0], [90.6, 1275.0], [90.7, 1275.0], [90.8, 1275.0], [90.9, 1275.0], [91.0, 1320.0], [91.1, 1320.0], [91.2, 1320.0], [91.3, 1320.0], [91.4, 1320.0], [91.5, 1320.0], [91.6, 1320.0], [91.7, 1320.0], [91.8, 1320.0], [91.9, 1320.0], [92.0, 1331.0], [92.1, 1331.0], [92.2, 1331.0], [92.3, 1331.0], [92.4, 1331.0], [92.5, 1331.0], [92.6, 1331.0], [92.7, 1331.0], [92.8, 1331.0], [92.9, 1331.0], [93.0, 1335.0], [93.1, 1335.0], [93.2, 1335.0], [93.3, 1335.0], [93.4, 1335.0], [93.5, 1335.0], [93.6, 1335.0], [93.7, 1335.0], [93.8, 1335.0], [93.9, 1335.0], [94.0, 1340.0], [94.1, 1340.0], [94.2, 1340.0], [94.3, 1340.0], [94.4, 1340.0], [94.5, 1340.0], [94.6, 1340.0], [94.7, 1340.0], [94.8, 1340.0], [94.9, 1340.0], [95.0, 1398.0], [95.1, 1398.0], [95.2, 1398.0], [95.3, 1398.0], [95.4, 1398.0], [95.5, 1398.0], [95.6, 1398.0], [95.7, 1398.0], [95.8, 1398.0], [95.9, 1398.0], [96.0, 1413.0], [96.1, 1413.0], [96.2, 1413.0], [96.3, 1413.0], [96.4, 1413.0], [96.5, 1413.0], [96.6, 1413.0], [96.7, 1413.0], [96.8, 1413.0], [96.9, 1413.0], [97.0, 1456.0], [97.1, 1456.0], [97.2, 1456.0], [97.3, 1456.0], [97.4, 1456.0], [97.5, 1456.0], [97.6, 1456.0], [97.7, 1456.0], [97.8, 1456.0], [97.9, 1456.0], [98.0, 1468.0], [98.1, 1468.0], [98.2, 1468.0], [98.3, 1468.0], [98.4, 1468.0], [98.5, 1468.0], [98.6, 1468.0], [98.7, 1468.0], [98.8, 1468.0], [98.9, 1468.0], [99.0, 1631.0], [99.1, 1631.0], [99.2, 1631.0], [99.3, 1631.0], [99.4, 1631.0], [99.5, 1631.0], [99.6, 1631.0], [99.7, 1631.0], [99.8, 1631.0], [99.9, 1631.0]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 49.0, "series": [{"data": [[85500.0, 1.0], [86300.0, 1.0], [87000.0, 1.0], [97500.0, 1.0], [99000.0, 39.0], [99100.0, 38.0], [99200.0, 14.0], [99400.0, 1.0], [99300.0, 4.0]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[600.0, 6.0], [300.0, 49.0], [1200.0, 1.0], [1300.0, 1.0], [700.0, 6.0], [1400.0, 1.0], [1500.0, 1.0], [400.0, 18.0], [200.0, 10.0], [1000.0, 2.0], [500.0, 5.0]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[3400.0, 1.0], [3500.0, 2.0], [4000.0, 1.0], [4100.0, 2.0], [4600.0, 1.0], [7100.0, 2.0], [7900.0, 1.0], [9700.0, 1.0], [9400.0, 1.0], [10900.0, 1.0], [11100.0, 1.0], [13700.0, 1.0], [14800.0, 1.0], [15700.0, 1.0], [15500.0, 1.0], [15600.0, 1.0], [18100.0, 1.0], [18700.0, 1.0], [20700.0, 1.0], [24500.0, 1.0], [25200.0, 1.0], [24700.0, 1.0], [26900.0, 1.0], [27200.0, 1.0], [28100.0, 1.0], [28700.0, 1.0], [30300.0, 2.0], [29700.0, 1.0], [30800.0, 1.0], [31100.0, 1.0], [32600.0, 2.0], [32200.0, 1.0], [32700.0, 1.0], [34500.0, 2.0], [34000.0, 4.0], [33400.0, 1.0], [34100.0, 1.0], [33700.0, 1.0], [34800.0, 2.0], [32800.0, 2.0], [33200.0, 1.0], [33000.0, 1.0], [33600.0, 1.0], [33500.0, 1.0], [35300.0, 1.0], [35400.0, 1.0], [35100.0, 1.0], [38600.0, 1.0], [37800.0, 1.0], [40700.0, 1.0], [41800.0, 1.0], [42400.0, 1.0], [43800.0, 1.0], [45400.0, 1.0], [45300.0, 1.0], [47000.0, 1.0], [47300.0, 1.0], [48000.0, 1.0], [49200.0, 2.0], [49600.0, 1.0], [52000.0, 1.0], [51400.0, 1.0], [52500.0, 1.0], [54600.0, 1.0], [53800.0, 1.0], [54700.0, 1.0], [55600.0, 2.0], [56100.0, 2.0], [57200.0, 2.0], [57300.0, 1.0], [55800.0, 2.0], [57100.0, 1.0], [55300.0, 1.0], [56200.0, 1.0], [56700.0, 1.0], [58300.0, 1.0], [58500.0, 1.0], [59300.0, 1.0], [59000.0, 1.0], [58400.0, 1.0], [57900.0, 1.0], [59700.0, 1.0], [60300.0, 1.0], [61800.0, 1.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[700.0, 1.0], [900.0, 1.0], [1300.0, 2.0], [1600.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3500.0, 1.0], [3800.0, 1.0], [4200.0, 1.0], [5200.0, 1.0], [5500.0, 1.0], [5400.0, 1.0], [5800.0, 1.0], [6200.0, 1.0], [6600.0, 1.0], [6900.0, 1.0], [6800.0, 1.0], [7200.0, 3.0], [7300.0, 1.0], [7400.0, 1.0], [7500.0, 4.0], [7800.0, 2.0], [7700.0, 1.0], [7900.0, 1.0], [8100.0, 2.0], [8200.0, 2.0], [8700.0, 2.0], [8500.0, 5.0], [8300.0, 1.0], [8400.0, 1.0], [9200.0, 5.0], [8800.0, 2.0], [9100.0, 3.0], [8900.0, 1.0], [9500.0, 1.0], [9400.0, 2.0], [9700.0, 3.0], [9300.0, 1.0], [9600.0, 1.0], [9800.0, 1.0], [10000.0, 3.0], [10100.0, 1.0], [9900.0, 3.0], [10700.0, 2.0], [10600.0, 2.0], [10500.0, 3.0], [10800.0, 2.0], [11100.0, 3.0], [11200.0, 1.0], [11000.0, 1.0], [10900.0, 1.0], [11500.0, 1.0], [11600.0, 2.0], [11400.0, 3.0], [11700.0, 2.0], [11300.0, 1.0], [12200.0, 1.0], [11900.0, 1.0], [12000.0, 1.0], [400.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[600.0, 14.0], [700.0, 27.0], [800.0, 18.0], [900.0, 11.0], [1000.0, 6.0], [1100.0, 3.0], [1200.0, 6.0], [300.0, 1.0], [1300.0, 5.0], [1400.0, 3.0], [1600.0, 1.0], [400.0, 1.0], [500.0, 4.0]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 99400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 80.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 200.0, "series": [{"data": [[0.0, 80.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 124.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 200.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 96.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 10.73333333333333, "minX": 1.66623432E12, "maxY": 96.80689655172415, "series": [{"data": [[1.66623438E12, 64.13071895424838], [1.66623432E12, 10.73333333333333], [1.6662345E12, 62.121212121212096], [1.66623444E12, 96.80689655172415], [1.66623456E12, 19.150684931506852]], "isOverall": false, "label": "Access Management", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66623456E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 245.0, "minX": 1.0, "maxY": 99404.0, "series": [{"data": [[3.0, 99172.0], [4.0, 99160.0], [6.0, 99173.0], [7.0, 99186.0], [8.0, 99226.0], [10.0, 99139.0], [12.0, 99247.0], [13.0, 99249.0], [15.0, 99225.0], [16.0, 99121.0], [17.0, 99115.0], [18.0, 99360.0], [19.0, 99136.0], [20.0, 99143.0], [22.0, 99095.5], [24.0, 99206.0], [28.0, 99122.8], [31.0, 99151.0], [33.0, 99285.0], [35.0, 99088.5], [34.0, 99058.0], [37.0, 99270.0], [39.0, 99259.0], [41.0, 99077.0], [40.0, 99129.66666666667], [43.0, 99112.5], [45.0, 99310.0], [46.0, 99206.0], [50.0, 99080.5], [53.0, 99141.0], [54.0, 99108.33333333333], [56.0, 99141.0], [58.0, 99112.0], [60.0, 99056.0], [62.0, 99102.66666666667], [67.0, 99051.0], [66.0, 99048.0], [65.0, 99181.0], [64.0, 99056.5], [71.0, 99085.5], [69.0, 99141.5], [75.0, 99404.0], [74.0, 99130.0], [72.0, 99094.0], [79.0, 99062.0], [78.0, 99087.0], [77.0, 99089.0], [83.0, 99057.66666666667], [80.0, 99083.0], [86.0, 99137.0], [85.0, 99191.0], [84.0, 99071.0], [91.0, 99125.0], [90.0, 99082.5], [88.0, 99108.0], [95.0, 99057.0], [94.0, 99047.0], [93.0, 99188.0], [92.0, 99272.0], [99.0, 86348.0], [98.0, 87056.0], [97.0, 97570.0], [96.0, 99051.0], [100.0, 85513.0], [1.0, 99222.0]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[51.140000000000015, 98734.86999999997]], "isOverall": false, "label": "getAllUserGrants-Aggregated", "isController": false}, {"data": [[3.0, 717.6666666666666], [4.0, 354.0], [5.0, 425.0], [6.0, 545.0], [7.0, 414.0], [8.0, 449.0], [9.0, 412.0], [10.0, 415.0], [11.0, 453.0], [13.0, 529.0], [14.0, 285.0], [15.0, 521.0], [16.0, 332.0], [17.0, 318.0], [18.0, 332.0], [19.0, 444.0], [20.0, 320.0], [21.0, 291.0], [22.0, 329.0], [23.0, 592.0], [24.0, 393.0], [25.0, 353.0], [27.0, 320.0], [28.0, 902.0], [29.0, 357.0], [30.0, 496.0], [31.0, 385.0], [32.0, 542.0], [34.0, 510.0], [35.0, 378.0], [36.0, 321.0], [37.0, 436.0], [38.0, 432.0], [40.0, 528.5], [42.0, 705.0], [43.0, 494.5], [44.0, 320.0], [45.0, 382.0], [46.0, 283.0], [47.0, 349.0], [48.0, 360.0], [49.0, 387.0], [51.0, 617.0], [52.0, 400.0], [53.0, 1540.0], [54.0, 532.5], [56.0, 610.5], [57.0, 338.0], [58.0, 411.0], [59.0, 284.0], [60.0, 325.0], [61.0, 355.0], [62.0, 304.0], [63.0, 299.0], [65.0, 543.0], [66.0, 373.0], [68.0, 470.0], [69.0, 325.0], [71.0, 350.0], [72.0, 833.0], [73.0, 311.0], [74.0, 302.0], [75.0, 305.0], [76.0, 298.0], [77.0, 333.0], [78.0, 322.0], [80.0, 682.5], [81.0, 453.0], [82.0, 395.0], [83.0, 308.0], [84.0, 489.0], [85.0, 318.0], [86.0, 306.0], [87.0, 276.0], [89.0, 343.0], [90.0, 863.0], [92.0, 610.0], [93.0, 299.0], [94.0, 539.0], [95.0, 361.0], [96.0, 245.0], [97.0, 306.0], [98.0, 301.0], [99.0, 334.0], [100.0, 376.0]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[50.730000000000004, 462.40999999999997]], "isOverall": false, "label": "getNavigations-Aggregated", "isController": false}, {"data": [[32.0, 9795.0], [33.0, 9462.0], [38.0, 10986.0], [40.0, 11114.0], [45.0, 13704.0], [48.0, 26998.0], [51.0, 20131.5], [52.0, 21056.0], [54.0, 15519.0], [55.0, 15632.0], [60.0, 28169.0], [65.0, 22596.333333333332], [71.0, 20709.0], [72.0, 32629.0], [78.0, 35313.0], [81.0, 34055.0], [83.0, 35492.0], [88.0, 25272.0], [89.0, 24764.0], [93.0, 54993.42857142857], [94.0, 46595.5], [95.0, 55803.0], [98.0, 37148.0], [99.0, 34022.0], [97.0, 57700.0], [96.0, 59273.0], [100.0, 40415.40476190476], [9.0, 3510.0], [10.0, 4150.0], [11.0, 4123.0], [12.0, 4070.0], [13.0, 3416.0], [15.0, 3520.0], [16.0, 4685.0], [23.0, 7105.0], [26.0, 7100.0], [29.0, 7966.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[81.22, 35862.540000000015]], "isOverall": false, "label": "getAllModules-Aggregated", "isController": false}, {"data": [[36.0, 4252.0], [39.0, 3672.0], [48.0, 5374.0], [54.0, 5457.0], [58.0, 6219.0], [61.0, 5869.0], [63.0, 6820.666666666667], [66.0, 7237.0], [67.0, 7268.0], [73.0, 8267.0], [79.0, 8640.0], [81.0, 9551.0], [87.0, 9845.0], [88.0, 9746.0], [91.0, 9175.75], [90.0, 9634.0], [89.0, 9255.5], [95.0, 9279.0], [93.0, 8762.833333333334], [92.0, 8855.0], [96.0, 9159.666666666666], [99.0, 10013.5], [98.0, 8532.5], [97.0, 7718.500000000001], [100.0, 10835.628571428573], [10.0, 467.0], [11.0, 599.0], [12.0, 720.0], [14.0, 972.0], [15.0, 1332.0], [17.0, 1347.0], [19.0, 1618.0], [28.0, 3120.0], [31.0, 3047.0]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[83.56000000000003, 8415.769999999995]], "isOverall": false, "label": "getAllRolesAndGrades-Aggregated", "isController": false}, {"data": [[3.0, 595.5], [4.0, 614.0], [5.0, 486.0], [6.0, 611.0], [7.0, 549.0], [8.0, 615.0], [9.0, 710.0], [10.0, 800.0], [11.0, 719.0], [12.0, 615.0], [13.0, 379.0], [14.0, 718.0], [15.0, 718.0], [16.0, 713.0], [17.0, 773.0], [18.0, 828.0], [19.0, 792.0], [20.0, 718.0], [21.0, 717.0], [22.0, 716.0], [23.0, 765.0], [24.0, 926.0], [25.0, 795.0], [26.0, 697.0], [28.0, 796.5], [29.0, 1030.0], [30.0, 820.0], [31.0, 920.0], [33.0, 975.0], [32.0, 923.0], [35.0, 754.0], [34.0, 716.0], [37.0, 819.0], [36.0, 663.0], [39.0, 852.0], [41.0, 1025.0], [40.0, 1040.0], [43.0, 610.0], [42.0, 722.0], [45.0, 614.0], [44.0, 720.0], [47.0, 927.0], [46.0, 759.0], [49.0, 875.0], [48.0, 822.0], [51.0, 512.0], [50.0, 815.0], [53.0, 836.0], [52.0, 818.0], [55.0, 964.0], [54.0, 928.0], [57.0, 828.0], [56.0, 675.0], [59.0, 1169.0], [58.0, 1320.0], [61.0, 1171.0], [60.0, 1232.0], [62.0, 1028.0], [67.0, 1631.0], [66.0, 1468.0], [65.0, 1335.0], [64.0, 1240.0], [71.0, 1026.0], [70.0, 1413.0], [69.0, 925.0], [68.0, 1275.0], [75.0, 1456.0], [74.0, 1331.0], [73.0, 1398.0], [72.0, 1104.0], [79.0, 913.0], [78.0, 716.0], [77.0, 1340.0], [76.0, 1248.0], [83.0, 701.0], [82.0, 851.0], [81.0, 772.0], [80.0, 928.0], [87.0, 933.0], [86.0, 1039.0], [85.0, 888.0], [84.0, 717.0], [91.0, 1228.0], [90.0, 719.0], [89.0, 849.0], [88.0, 819.0], [95.0, 772.0], [94.0, 619.0], [93.0, 818.0], [92.0, 717.0], [99.0, 668.0], [98.0, 738.0], [97.0, 753.0], [96.0, 666.0], [100.0, 621.0], [1.0, 511.0]], "isOverall": false, "label": "getProjectNavs", "isController": false}, {"data": [[50.539999999999985, 868.7800000000002]], "isOverall": false, "label": "getProjectNavs-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1330.6, "minX": 1.66623432E12, "maxY": 2657455.6333333333, "series": [{"data": [[1.66623438E12, 2167778.433333333], [1.66623432E12, 372960.4], [1.6662345E12, 5458.85], [1.66623444E12, 2657455.6333333333], [1.66623456E12, 4110.833333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66623438E12, 6784.333333333333], [1.66623432E12, 1330.6], [1.6662345E12, 4416.833333333333], [1.66623444E12, 6451.0], [1.66623456E12, 3257.233333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66623456E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 459.1204819277107, "minX": 1.66623432E12, "maxY": 99166.41666666669, "series": [{"data": [[1.6662345E12, 99117.76000000002], [1.66623444E12, 96257.71428571429], [1.66623456E12, 99166.41666666669]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[1.66623438E12, 459.1204819277107], [1.66623432E12, 478.47058823529414]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[1.66623438E12, 26246.341463414636], [1.66623432E12, 3924.857142857143], [1.66623444E12, 47743.846153846156]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[1.66623438E12, 7453.724137931034], [1.66623432E12, 906.1666666666666], [1.66623444E12, 9538.184615384615]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[1.6662345E12, 1001.4081632653056], [1.66623444E12, 780.0], [1.66623456E12, 726.7297297297298]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66623456E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 343.4698795180723, "minX": 1.66623432E12, "maxY": 99166.41666666669, "series": [{"data": [[1.6662345E12, 99117.76000000002], [1.66623444E12, 96257.64285714287], [1.66623456E12, 99166.41666666669]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[1.66623438E12, 343.4698795180723], [1.66623432E12, 389.05882352941177]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[1.66623438E12, 15628.780487804877], [1.66623432E12, 2511.285714285714], [1.66623444E12, 31093.692307692305]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[1.66623438E12, 7452.448275862068], [1.66623432E12, 906.0], [1.66623444E12, 9537.646153846146]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[1.6662345E12, 1001.2040816326528], [1.66623444E12, 779.7142857142857], [1.66623456E12, 726.5405405405405]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66623456E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66623432E12, "maxY": 142.3673469387755, "series": [{"data": [[1.6662345E12, 8.16], [1.66623444E12, 0.0], [1.66623456E12, 47.80555555555556]], "isOverall": false, "label": "getAllUserGrants", "isController": false}, {"data": [[1.66623438E12, 134.710843373494], [1.66623432E12, 141.7058823529412]], "isOverall": false, "label": "getNavigations", "isController": false}, {"data": [[1.66623438E12, 0.0], [1.66623432E12, 0.0], [1.66623444E12, 0.0]], "isOverall": false, "label": "getAllModules", "isController": false}, {"data": [[1.66623438E12, 0.0], [1.66623432E12, 0.0], [1.66623444E12, 3.5538461538461545]], "isOverall": false, "label": "getAllRolesAndGrades", "isController": false}, {"data": [[1.6662345E12, 142.3673469387755], [1.66623444E12, 71.85714285714286], [1.66623456E12, 71.1081081081081]], "isOverall": false, "label": "getProjectNavs", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66623456E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 245.0, "minX": 1.66623432E12, "maxY": 97570.0, "series": [{"data": [[1.66623438E12, 47357.0], [1.66623432E12, 4685.0], [1.6662345E12, 1631.0], [1.66623444E12, 97570.0], [1.66623456E12, 1030.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66623438E12, 31020.0], [1.66623432E12, 4117.7], [1.6662345E12, 1398.0], [1.66623444E12, 57622.600000000006], [1.66623456E12, 923.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66623438E12, 46304.540000000015], [1.66623432E12, 4685.0], [1.6662345E12, 1631.0], [1.66623444E12, 93784.95999999986], [1.66623456E12, 1030.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66623438E12, 38119.69999999999], [1.66623432E12, 4390.75], [1.6662345E12, 1462.0], [1.66623444E12, 59865.99999999999], [1.66623456E12, 980.5000000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66623438E12, 245.0], [1.66623432E12, 285.0], [1.6662345E12, 512.0], [1.66623444E12, 619.0], [1.66623456E12, 379.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66623438E12, 772.0], [1.66623432E12, 572.0], [1.6662345E12, 928.0], [1.66623444E12, 11116.0], [1.66623456E12, 718.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66623456E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 795.0, "minX": 1.0, "maxY": 99205.0, "series": [{"data": [[2.0, 925.0], [1.0, 1135.5], [4.0, 3825.0], [8.0, 33426.0], [5.0, 4685.0], [3.0, 5233.0], [6.0, 9926.0], [7.0, 795.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 99116.0], [4.0, 99096.0], [1.0, 99125.0], [5.0, 99047.0], [3.0, 99141.0], [6.0, 99141.0], [7.0, 99205.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 8.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 795.0, "minX": 1.0, "maxY": 99205.0, "series": [{"data": [[2.0, 925.0], [1.0, 1135.5], [4.0, 3120.0], [8.0, 22168.0], [5.0, 3398.0], [3.0, 4252.0], [6.0, 9724.0], [7.0, 795.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 99116.0], [4.0, 99096.0], [1.0, 99125.0], [5.0, 99047.0], [3.0, 99141.0], [6.0, 99141.0], [7.0, 99205.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 8.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.66623432E12, "maxY": 3.9166666666666665, "series": [{"data": [[1.66623438E12, 3.9166666666666665], [1.66623432E12, 0.8], [1.6662345E12, 0.8333333333333334], [1.66623444E12, 2.183333333333333], [1.66623456E12, 0.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66623456E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.66623432E12, "maxY": 2.55, "series": [{"data": [[1.66623438E12, 2.55], [1.66623432E12, 0.5], [1.6662345E12, 0.8166666666666667], [1.66623444E12, 2.25], [1.66623456E12, 0.6166666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6662345E12, 0.8333333333333334], [1.66623444E12, 0.16666666666666666], [1.66623456E12, 0.6]], "isOverall": false, "label": "524", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66623456E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.66623432E12, "maxY": 1.3833333333333333, "series": [{"data": [[1.6662345E12, 0.8166666666666667], [1.66623444E12, 0.23333333333333334], [1.66623456E12, 0.6166666666666667]], "isOverall": false, "label": "getProjectNavs-success", "isController": false}, {"data": [[1.6662345E12, 0.8333333333333334], [1.66623444E12, 0.16666666666666666], [1.66623456E12, 0.6]], "isOverall": false, "label": "getAllUserGrants-failure", "isController": false}, {"data": [[1.66623438E12, 1.3833333333333333], [1.66623432E12, 0.2833333333333333]], "isOverall": false, "label": "getNavigations-success", "isController": false}, {"data": [[1.66623438E12, 0.6833333333333333], [1.66623432E12, 0.11666666666666667], [1.66623444E12, 0.8666666666666667]], "isOverall": false, "label": "getAllModules-success", "isController": false}, {"data": [[1.66623438E12, 0.48333333333333334], [1.66623432E12, 0.1], [1.66623444E12, 1.0833333333333333]], "isOverall": false, "label": "getAllRolesAndGrades-success", "isController": false}, {"data": [[1.66623444E12, 0.06666666666666667]], "isOverall": false, "label": "getAllUserGrants-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66623456E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.66623432E12, "maxY": 2.55, "series": [{"data": [[1.66623438E12, 2.55], [1.66623432E12, 0.5], [1.6662345E12, 0.8166666666666667], [1.66623444E12, 2.25], [1.66623456E12, 0.6166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6662345E12, 0.8333333333333334], [1.66623444E12, 0.16666666666666666], [1.66623456E12, 0.6]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66623456E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

